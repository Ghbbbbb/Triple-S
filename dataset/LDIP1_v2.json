[
    {
        "instruction": "Close the gripper.",
        "code": "```python\npri.gripper_ctrl('close')```",
        "goal_pos": "{\"gripper_pos\": [0.4489828263526714, -0.001447898260821684, 0.23839687836686901], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724196843], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724196843], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724196843], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724196843]}"
    },
    {
        "instruction": "Open the gripper.",
        "code": "```python\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.4489828263540483, -0.0014478973186704738, 0.23839687836744744], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724196843], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724196843], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724196843], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724196843]}"
    },
    {
        "instruction": "Move the gripper 10cm to the right.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45063671484722007, -0.08501659769737586, 0.23858260900514178], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272546967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272546967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272546967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272546967]}"
    },
    {
        "instruction": "Move the gripper 10cm to the left.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.1, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45110489382119345, 0.08308890487972191, 0.23885297136449973], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272530886], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272530886], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272530886], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272530886]}"
    },
    {
        "instruction": "Lift the gripper 15cm upwards.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0, 0.15])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45540858423314756, -0.0017265905206667986, 0.3764631871367418], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724484757], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724484757], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724484757], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724484757]}"
    },
    {
        "instruction": "Lower the gripper 10cm downwards.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0, -0.1])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.44848516948680756, -0.0011353712200797745, 0.15856039512682601], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542727058926], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542727058926], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542727058926], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542727058926]}"
    },
    {
        "instruction": "Move the gripper 15cm forward.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0.15, 0, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.5803642865799253, -0.0014911656271581622, 0.24024324891629495], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272516836], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272516836], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272516836], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272516836]}"
    },
    {
        "instruction": "Move the gripper 10cm backward.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([-0.1, 0, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.3699980157161885, -0.0013226813088892259, 0.23812678509212687], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542727058926], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542727058926], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542727058926], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542727058926]}"
    },
    {
        "instruction": "Move the gripper to the home position.",
        "code": "```python\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44898282635349884, -0.0014478976645460459, 0.23839687836722573], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.440985429883705], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.440985429883705], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.440985429883705], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.440985429883705]}"
    },
    {
        "instruction": "Reset the gripper.",
        "code": "```python\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44898282635349884, -0.0014478976645460459, 0.23839687836722573], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.440985429883705], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.440985429883705], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.440985429883705], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.440985429883705]}"
    },
    {
        "instruction": "Move the gripper to the 20cm over the white mug.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.2])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7613988397695717, -0.14027974461667772, 0.3087117760767832], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272422182], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272422182], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272422182], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272422182]}"
    },
    {
        "instruction": "Move the gripper to the 10cm over the black mug.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4420626977998025, -0.08428047127550069, 0.21264832026283215], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 5cm to the top of the green block.",
        "code": "```python\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.05])\npri.move(target_pos, green_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6465225806344219, -0.16706245974774384, 0.1843903177756045], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Please move the gripper 5cm to the top of the yellow cube.",
        "code": "```python\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.05])\npri.move(target_pos, yellow_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7029931203935343, -0.23360732342481866, 0.18395675079448331], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724203965], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724203965], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724203965], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724203965]}"
    },
    {
        "instruction": "Please move the gripper 0.1m to the top of the red cube.",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.5368249591210414, 0.20982334776068268, 0.23294011874309878], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272432469], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272432469], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272432469], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272432469]}"
    },
    {
        "instruction": "Move the gripper 0.05m over the blue block.",
        "code": "```python\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.05])\npri.move(target_pos, blue_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.38357206557259804, 0.17310211311192114, 0.18246128486070928], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272429433], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272429433], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272429433], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272429433]}"
    },
    {
        "instruction": "Grip the yellow block.",
        "code": "```python\npri.grab('yellow_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473822237824207, -0.001145269601209076, 0.23678369799966953], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4490943499187778, 0.00029089161089834904, 0.5424555286865753]}"
    },
    {
        "instruction": "Pick up the red block.",
        "code": "```python\npri.grab('red_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45097377502853747, 0.0041045913023726645, 0.23685652255310446], \"gripper_state\": \"close\", \"red_goal\": [0.45295983306590903, 0.0030333655147168574, 0.5400097572045462], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please pick up the green cube.",
        "code": "```python\npri.grab('green_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4488432907650911, -0.002928527171073245, 0.23688278489605658], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4490898191296773, -0.0027194415734193753, 0.5414068813292887], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please Grip the blue block.",
        "code": "```python\npri.grab('blue_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44787084274120265, 0.012571767240441468, 0.2377720659783768], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4571003532626198, 0.011463574249673203, 0.5446455014279481], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the gripper 10cm above the object which is far away from your current position and are using to drink coffee.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.1])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7615328026017375, -0.14048859842297895, 0.21282538385914335], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 10cm above the object which is close from your current position and are using to drink tea.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4420626977998025, -0.08428047127550069, 0.21264832026283215], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 15cm over the mug that is not the color of white.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4450600670698487, -0.08742346400556489, 0.2585488841260603], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724691236], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724691236], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724691236], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724691236]}"
    },
    {
        "instruction": "Move the gripper 0.15m over the mug that is not black.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7611491326896205, -0.14023991348681647, 0.26091597128027705], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724218615], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724218615], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724218615], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724218615]}"
    },
    {
        "instruction": "Move the gripper 0.1m above the object that is not a block and has light color.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.1])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7615328026017375, -0.14048859842297895, 0.21282538385914335], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 0.1m above the object that is not a block and has dark color.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4420626977998025, -0.08428047127550069, 0.21264832026283215], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 10cm left to the cup that is darker.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.1, 0])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.44230316579825235, 0.0013393676245854796, 0.12478671065191488], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 0.2m left to the cup which has a light color.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.2, 0])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7622045587314378, 0.05364003871311971, 0.11571400319717301], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272420773], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272420773], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272420773], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272420773]}"
    },
    {
        "instruction": "Move the gripper 5 cm to the top of the block that matches the color of grass.",
        "code": "```python\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.05])\npri.move(target_pos, green_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6465225806344219, -0.16706245974774384, 0.1843903177756045], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 15cm over the block that is the same color as the ‘blood’.",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.15])\npri.move(target_pos, red_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.5375030998732299, 0.21108002514401694, 0.2793652815248953], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272430848], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272430848], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272430848], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272430848]}"
    },
    {
        "instruction": "Move the gripper 10cm over the block that is the color of a lemon.",
        "code": "```python\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7028591963887582, -0.23302227866179576, 0.23271390946203102], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.440985427242063], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.440985427242063], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.440985427242063], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.440985427242063]}"
    },
    {
        "instruction": "Move the gripper 20 cm over the block that is the color of the sky on a clear day.",
        "code": "```python\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.2])\npri.move(target_pos, blue_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.38647180410508597, 0.1769377919990148, 0.329193908507242], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272423448], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272423448], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272423448], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272423448]}"
    },
    {
        "instruction": "Position the gripper 15cm to the right of the block that is the color of the ocean.",
        "code": "```python\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, -0.15, 0])\npri.move(target_pos, blue_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.3835527427732872, 0.029728942320444318, 0.13563743332270523], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272444834], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272444834], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272444834], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272444834]}"
    },
    {
        "instruction": "Move the gripper 10cm in front of the block that is the color of a stop sign.",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0.1, 0, 0])\npri.move(target_pos, red_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6352962432716601, 0.21736542320872257, 0.13689083954179532], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724218615], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724218615], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724218615], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724218615]}"
    },
    {
        "instruction": "Position the gripper 5cm in front of the block that is the color of the sky.",
        "code": "```python\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0.05, 0, 0])\npri.move(target_pos, blue_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.43010130645781386, 0.17298231669496816, 0.13521614842123802], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724281975], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724281975], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724281975], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724281975]}"
    },
    {
        "instruction": "Move the gripper 10cm to the right of the block which matches the color of an apple.",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0])\npri.move(target_pos, red_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.533309410891808, 0.11911840336057337, 0.13445329319659388], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272422967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272422967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272422967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272422967]}"
    },
    {
        "instruction": "Move the gripper 10cm behind the block that resembles the color of banana.",
        "code": "```python\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0])\npri.move(target_pos, yellow_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6037333568628371, -0.23317988929160888, 0.13530090719271498], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272420773], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272420773], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272420773], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272420773]}"
    },
    {
        "instruction": "Move the gripper 23cm to the left of the block that has the same color as a sunflower.",
        "code": "```python\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0.23, 0])\npri.move(target_pos, yellow_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.69972085245152, -0.008840547444608837, 0.1362625823413131], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 16cm to the left of the block that matches the color of fresh leaves.",
        "code": "```python\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0.16, 0])\npri.move(target_pos, green_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6441493032022192, -0.011754844989403395, 0.13720291281327196], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272422967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272422967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272422967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272422967]}"
    },
    {
        "instruction": "Move the gripper 5cm behind the block that resembles the color of an emerald.",
        "code": "```python\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.05, 0, 0])\npri.move(target_pos, green_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.5953012594904123, -0.16567283550732326, 0.13422087321017045], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Lift the block that shares the color with a ripe tomato.",
        "code": "```python\npri.grab('red_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45143219083126607, 0.004652338181221901, 0.23682335166592877], \"gripper_state\": \"close\", \"red_goal\": [0.45316591387006055, 0.003494669364067275, 0.540437477400962], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the cube that has the color of butter.",
        "code": "```python\npri.grab('yellow_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733622747093793, -0.0012051758012625704, 0.23679611105739568], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4491211269233193, 0.00011945647171429514, 0.5421375515061467]}"
    },
    {
        "instruction": "Grab the block that has the color of a cucumber.",
        "code": "```python\npri.grab('green_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4488432907650911, -0.002928527171073245, 0.23688278489605658], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4490898191296773, -0.0027194415734193753, 0.5414068813292887], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Lift the block that shares the color of the sky.",
        "code": "```python\npri.grab('blue_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44787084274120265, 0.012571767240441468, 0.2377720659783768], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4571003532626198, 0.011463574249673203, 0.5446455014279481], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "I am facing you, please move your gripper 20cm to my left.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.2, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45228285199066215, -0.19106596331613207, 0.23935189641650229], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724281975], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724281975], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724281975], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724281975]}"
    },
    {
        "instruction": "I am facing you, please move your gripper 0.2m to my right.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.2, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4527881436849333, 0.18835400889318352, 0.2396002337228565], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724281975], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724281975], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724281975], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724281975]}"
    },
    {
        "instruction": "I'm on your right and facing the same direction as you, please move your gripper 0.1m to my left.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45063671484722007, -0.08501659769737586, 0.23858260900514178], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272546967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272546967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272546967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272546967]}"
    },
    {
        "instruction": "I'm on your right and facing the same direction as you, please move your gripper 0.1m to my right.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45063671484722007, -0.08501659769737586, 0.23858260900514178], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272546967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272546967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272546967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272546967]}"
    },
    {
        "instruction": "I'm on your left and facing the same direction as you, please move your gripper 0.2m to my right.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.2, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4527881436849333, 0.18835400889318352, 0.2396002337228565], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724281975], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724281975], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724281975], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724281975]}"
    },
    {
        "instruction": "I'm on your left and facing the same direction as you, please move your gripper 15cm to my left.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.15, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4523432139171181, 0.13686099009168406, 0.23946749813411522], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272441653], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272441653], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272441653], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272441653]}"
    },
    {
        "instruction": "There is something i want, the position of it is 15cm to your left and 10cm above your current position, please move to this position.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4534658357559773, 0.14210052762050848, 0.335167904485487], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724246276], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724246276], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724246276], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724246276]}"
    },
    {
        "instruction": "There is something i want, the position of it is 0.1m to your right and 5cm below your current position, please move to this position.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, -0.05])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4481796212079511, -0.09006064734158285, 0.19261145683820086], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724691236], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724691236], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724691236], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724691236]}"
    },
    {
        "instruction": "please grab the block which is the cloest to the red block",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(red_pos-blue_pos),'green_block':np.linalg.norm(red_pos-green_pos),'yellow_block':np.linalg.norm(red_pos-yellow_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\ncloest_obj = sorted_distances[0][0]\npri.grab(cloest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44806078318485004, 0.01247961654702593, 0.23790365726758983], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4556939476476844, 0.01095486971490743, 0.543703917403993], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "pick up the block that is the cloest to the yellow block",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(yellow_pos-blue_pos),'green_block':np.linalg.norm(yellow_pos-green_pos),'red_block':np.linalg.norm(yellow_pos-red_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\ncloest_obj = sorted_distances[0][0]\npri.grab(cloest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4488432907650911, -0.002928527171073245, 0.23688278489605658], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4490898191296773, -0.0027194415734193753, 0.5414068813292887], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "pick up the cube that is the farthest from the blue block",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'red_block':np.linalg.norm(blue_pos-red_pos),'green_block':np.linalg.norm(blue_pos-green_pos),'yellow_block':np.linalg.norm(blue_pos-yellow_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nfarthest_obj = sorted_distances[-1][0]\npri.grab(farthest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733622747093793, -0.0012051758012625704, 0.23679611105739568], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4491211269233193, 0.00011945647171429514, 0.5421375515061467]}"
    },
    {
        "instruction": "grab the cube that is the second farthest from the green cube",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'red_block':np.linalg.norm(green_pos-red_pos),'blue_block':np.linalg.norm(green_pos-blue_pos),'yellow_block':np.linalg.norm(green_pos-yellow_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nsecond_farthest_obj = sorted_distances[-2][0]\npri.grab(second_farthest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45097377502853747, 0.0041045913023726645, 0.23685652255310446], \"gripper_state\": \"close\", \"red_goal\": [0.45295983306590903, 0.0030333655147168574, 0.5400097572045462], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 15cm to your left side and then open your gripper.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.15, 0])\npri.move(target_pos, current_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.45015490227007426, 0.1495510520761068, 0.23942380746226727], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 0.1m to your right side and then close your claw.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, 0])\npri.move(target_pos, current_quat)\npri.gripper_ctrl('close')```",
        "goal_pos": "{\"gripper_pos\": [0.4491448333481605, -0.10198101051554853, 0.23870279323435822], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 20cm to your left, then 15cm above you.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.2, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0, 0, 0.15])\npri.move(target_pos2, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.45433933784779107, 0.19911503720685642, 0.38117779892136866], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 0.2m to your right, then 15cm above you.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.2, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0, 0, 0.15])\npri.move(target_pos2, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4538736109426821, -0.20269662875218228, 0.3821293807378367], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 20 cm to the left, then 15cm in front of you, and finally 10cm to the right.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.2, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0.15, 0, 0])\npri.move(target_pos2, current_quat)\ntarget_pos3 = target_pos2 + np.array([0, -0.1, 0])\npri.move(target_pos3, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.60037666068604, 0.1122966311663504, 0.23960790998498444], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 20 cm to the right, then 15cm in front of you, and finally 10cm to the left, and then open your claw.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.2, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0.15, 0, 0])\npri.move(target_pos2, current_quat)\ntarget_pos3 = target_pos2 + np.array([0, 0.1, 0])\npri.move(target_pos3, current_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.6008009161453549, -0.10163739546113604, 0.23938153492100273], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please open your clamp first, then move 10 cm to the left, then 15cm in front of you, and finally 15cm to the right.",
        "code": "```python\npri.gripper_ctrl('open')\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.1, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0.15, 0, 0])\npri.move(target_pos2, current_quat)\ntarget_pos3 = target_pos2 + np.array([0, -0.15, 0])\npri.move(target_pos3, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7520743003448283, -0.13954122309405043, 0.24067529972898166], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 10cm to your right, then 10cm to your front, then 10cm to your left, and finally 10cm to your back.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0.1, 0, 0])\npri.move(target_pos2, current_quat)\ntarget_pos3 = target_pos2 + np.array([0, 0.1, 0])\npri.move(target_pos3, current_quat)\ntarget_pos4 = target_pos3 + np.array([-0.1, 0, 0])\npri.move(target_pos4, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4632526611552439, -0.0026042584071659896, 0.23791234096801744], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please move 10cm to your right, then close your claw, then move 15cm to the front, then release your claw.",
        "code": "```python\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.1, 0])\npri.move(target_pos, current_quat)\npri.gripper_ctrl('close')\ntarget_pos2 = target_pos + np.array([0.15, 0, 0])\npri.move(target_pos2, current_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.6004907024150319, -0.10199506083892039, 0.2394685004021176], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please open your gripper first, then move 20cm to the right, then 15cm to the front, then 8cm to the left, then 10cm to the back, and finally close your gripper.",
        "code": "```python\npri.gripper_ctrl('open')\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.2, 0])\npri.move(target_pos, current_quat)\ntarget_pos2 = target_pos + np.array([0.15, 0, 0])\npri.move(target_pos2, current_quat)\ntarget_pos3 = target_pos2 + np.array([0, 0.08, 0])\npri.move(target_pos3, current_quat)\ntarget_pos4 = target_pos3 + np.array([-0.1, 0, 0])\npri.move(target_pos4, current_quat)\npri.gripper_ctrl('close')```",
        "goal_pos": "{\"gripper_pos\": [0.6482932950467699, -0.22093719594440772, 0.23845922165142802], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blue block and position it 10cm right to the red block.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4541851959477599, 0.005602153015832553, 0.23712282802405066], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.545704698339761, 0.1307255688918476, 0.4413656790655994], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blue cube and position it 10cm left to the white mug.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4582478298718905, -0.0029069303627722596, 0.2369513060635286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7775035220512176, -0.05250788603812295, 0.4414003988938382], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the blue block and place it 0.15m behind the yellow block.",
        "code": "```python\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530577855651444, -0.008504898729508294, 0.237256794144374], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.568148316554303, -0.2292889213104673, 0.4409862763235546], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the blue block and place it 10cm in front of the black mug.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4580228841644996, -0.008510243409695936, 0.23678509830654187], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5540456829324969, -0.09512872515270801, 0.4412547234144763], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red block and position it 12cm right to the blue block.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, -0.12, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44221523867491935, 0.007624315917720798, 0.23831697348019915], \"gripper_state\": \"open\", \"red_goal\": [0.38737350807672777, 0.06548118013278975, 0.44098542620921033], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red cube and position it 15cm left to the white mug.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45882385271619824, -0.0019704852668827374, 0.23701731668025133], \"gripper_state\": \"open\", \"red_goal\": [0.7751008468799995, 0.0013365709995763573, 0.44103511411561663], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the red block and place it 0.15m behind the yellow block.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530453397092132, -0.008528434917943261, 0.2372565427112227], \"gripper_state\": \"open\", \"red_goal\": [0.5650458336132599, -0.23373906991893423, 0.44098542721109724], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the red block and place it 14cm in front of the black mug.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.14, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568649876645915, -0.006110497254078279, 0.23630179538138768], \"gripper_state\": \"open\", \"red_goal\": [0.5936395251380387, -0.09351252127954207, 0.44098526513249353], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green block and position it 8cm right to the red block.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.08, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45391631890064754, 0.006540503505227399, 0.23669170089807084], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5381022359973557, 0.1442660503840682, 0.44098542315211464], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green cube and position it 13cm left to the white mug.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.13, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4588036241707173, -0.0024795745213143155, 0.2369500790266033], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.77062456242006, -0.02134185837114475, 0.44098520162034177], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it 0.17m behind the yellow block.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.17, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4520675587865677, -0.009011946657670581, 0.23714958573454453], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5344568870421456, -0.23681210116948082, 0.44098542749785946], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it 20cm in front of the black mug.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4583126737855171, -0.005732010047102875, 0.2364575443488604], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6384465253147598, -0.10022044025479047, 0.44098542732759805], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the yellow block and position it 10cm right to the red block.",
        "code": "```python\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45337627041935585, 0.005330634123270536, 0.23683651361842367], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5406292161566374, 0.1255475411398638, 0.44098419671465966]}"
    },
    {
        "instruction": "Pick up the yellow cube and position it 13cm right to the white mug.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, -0.13, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.455593967222583, -0.005578879419758199, 0.23689482781628984], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768064543314668, -0.27829034837502176, 0.4409877677994305]}"
    },
    {
        "instruction": "Grab the yellow block and place it 0.12m behind the green block.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.12, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45225280976407545, -0.008097497600361919, 0.2368272281527753], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.52771370456791, -0.1737817958782708, 0.4410228294162118]}"
    },
    {
        "instruction": "Grab the yellow block and place it 18cm right to the black mug.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, -0.18, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4511875863971866, -0.011597036683968175, 0.23672135287185053], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.43748426272401525, -0.274348203255731, 0.4409784367143282]}"
    },
    {
        "instruction": "Grab the red block and place it on the blue block.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475350249118585, 0.014014629264900675, 0.23855558278476435], \"gripper_state\": \"open\", \"red_goal\": [0.38430545284421447, 0.18188441870167082, 0.48094034817558523], \"blue_goal\": [0.3790447628879655, 0.18308911006395806, 0.4409708602719784], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green block and stack it on top of the blue block.",
        "code": "```python\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4476921587685429, 0.013182704427861874, 0.2386042739961977], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3789182464329545, 0.1830983772424934, 0.44097086695731563], \"green_goal\": [0.3801657481304738, 0.17945946814944408, 0.4809498837179775], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the yellow block on top of the blue block.",
        "code": "```python\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473366713768422, 0.014108666627017744, 0.23842903314035974], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37891443828393534, 0.1829891847523431, 0.44097086478298836], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.3878310114304674, 0.18159525701023133, 0.4810500927026747]}"
    },
    {
        "instruction": "Grab the blue block and place it on the red block.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45533450140288106, 0.010030094372466491, 0.23705213396712438], \"gripper_state\": \"open\", \"red_goal\": [0.5372580096972291, 0.22535388524325584, 0.4409708658771622], \"blue_goal\": [0.5437381012119822, 0.22877360204593447, 0.48128144984617843], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green block and stack it on top of the red block.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4540413738544121, 0.008591705635417096, 0.23664270598850073], \"gripper_state\": \"open\", \"red_goal\": [0.5372631907013925, 0.22534934135143955, 0.44097086038115146], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5399922600855577, 0.22525651820969098, 0.4809506323888379], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the yellow block on top of the red block.",
        "code": "```python\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45347401056896475, 0.007894605071192837, 0.23682180416409332], \"gripper_state\": \"open\", \"red_goal\": [0.5371917418825746, 0.2252358467153457, 0.4409708525915374], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.542684001123611, 0.22650852281457023, 0.48100259153233077]}"
    },
    {
        "instruction": "Grab the blue block and place it on the green block.",
        "code": "```python\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4553658996371863, -0.00607983225192331, 0.23710275572051814], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6605508503060972, -0.18221774168060734, 0.48130893050655466], \"green_goal\": [0.6493249318282263, -0.1719865480490623, 0.4409708660978287], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red block and stack it on top of the green block.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4553525213691295, -0.006077078765511133, 0.23708518384170557], \"gripper_state\": \"open\", \"red_goal\": [0.6586239041955286, -0.1810499306918204, 0.48096948518023014], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493221281901856, -0.1719862680900978, 0.44097086398114865], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the yellow block on top of the green block.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45481164761147136, -0.0057820152202279615, 0.23702102555247268], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493335261763593, -0.17199149155762258, 0.4409708603679063], \"yellow_goal\": [0.6497910571714807, -0.17172938025224999, 0.48096356129586826]}"
    },
    {
        "instruction": "Grab the blue block and place it on the yellow block.",
        "code": "```python\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45583559574863175, -0.005420687410587863, 0.23728201465035964], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7194132276277881, -0.2272253843147505, 0.48101158640985064], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040604104647498, -0.23978566171635263, 0.4409708659310942]}"
    },
    {
        "instruction": "Pick up the green block and stack it on top of the yellow block.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45525477524959124, -0.005474313004967202, 0.23735334840590144], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7103776220097523, -0.23923205157434216, 0.48093890699219444], \"yellow_goal\": [0.7040830534137764, -0.23963867578499734, 0.4409708606647589]}"
    },
    {
        "instruction": "Stack the red block on top of the yellow block.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558350084085929, -0.005419180051453322, 0.23728197265697853], \"gripper_state\": \"open\", \"red_goal\": [0.716512583642191, -0.23053889690654722, 0.4809301103878022], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040800708914972, -0.23975454944943225, 0.4409708614582812]}"
    },
    {
        "instruction": "Please put the blue square on the red square first, and then put the green square on the blue square.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45447070219064084, 0.008776336359883766, 0.23832635779490402], \"gripper_state\": \"open\", \"red_goal\": [0.5372813605648542, 0.22536616915726412, 0.440956309005069], \"blue_goal\": [0.5440286079856921, 0.22888893921048875, 0.4809092011437959], \"green_goal\": [0.5527348335141836, 0.23210445687694148, 0.5208811158409705], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the green block on the red block, then stack the yellow block on top.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45470780120142773, 0.00980585267397801, 0.2381830340448417], \"gripper_state\": \"open\", \"red_goal\": [0.5372847591444291, 0.22536048176216902, 0.4409563099322267], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5400648797502571, 0.22528346200866067, 0.4809079164675333], \"yellow_goal\": [0.5405466574129097, 0.22496571273097296, 0.5208989400773165]}"
    },
    {
        "instruction": "Stack the yellow and blue cubes on top of the red cube in order.",
        "code": "```python\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4539369636852605, 0.007964730173337611, 0.238382095942885], \"gripper_state\": \"open\", \"red_goal\": [0.5371839364666232, 0.22522651638581603, 0.44095630167219524], \"blue_goal\": [0.5517793142749366, 0.23213406866138023, 0.5212835612832807], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5426463544133123, 0.22647584713933477, 0.4809155906275501]}"
    },
    {
        "instruction": "Please put the red square on the blue square first, and then put the green square on the red square.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44501691446776603, 0.011758732379340473, 0.23920021624883175], \"gripper_state\": \"open\", \"red_goal\": [0.38434190087651965, 0.1818656784923701, 0.48089299868639324], \"blue_goal\": [0.379051289009148, 0.18308361696988903, 0.4409563059532703], \"green_goal\": [0.3848808038430012, 0.17935202352575633, 0.5208778074518589], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the green block on the blue block, then stack the yellow block on top.",
        "code": "```python\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44533450657027474, 0.010351076602069489, 0.23937323104470715], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37894773685233313, 0.18310111066575646, 0.4409563094257935], \"green_goal\": [0.3801524322664894, 0.1793785784110476, 0.4809346079547192], \"yellow_goal\": [0.3867752430319977, 0.17692023908120516, 0.5208917829628226]}"
    },
    {
        "instruction": "Stack the yellow and red cubes on top of the blue cube in order.",
        "code": "```python\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44520110467879, 0.012185018838506095, 0.23940214384697162], \"gripper_state\": \"open\", \"red_goal\": [0.40131255542108474, 0.17882526946391789, 0.5208609292921975], \"blue_goal\": [0.3789203299473706, 0.18297988106173782, 0.44095630931716595], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.38773605743008843, 0.18154891288319083, 0.4809160011304795]}"
    },
    {
        "instruction": "Please put the blue square on the green square first, and then put the red square on the blue square.",
        "code": "```python\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45567237180028103, -0.006232467379487268, 0.23784972556079426], \"gripper_state\": \"open\", \"red_goal\": [0.6744181040238516, -0.19260619503500814, 0.5211038806104926], \"blue_goal\": [0.6608489302008057, -0.18243352302185142, 0.48086391618201346], \"green_goal\": [0.6493416641954443, -0.17200522066771654, 0.440956316367672], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the red block on the green block, then stack the yellow block on top.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.455478038366435, -0.006030181704265364, 0.23788008677930178], \"gripper_state\": \"open\", \"red_goal\": [0.6572925788617945, -0.17983691933718565, 0.4808791222053708], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6491794457860653, -0.17175860750571526, 0.4409563093997197], \"yellow_goal\": [0.6586377553294628, -0.18319851164420892, 0.5208561821663322]}"
    },
    {
        "instruction": "Stack the yellow and blue cubes on top of the green cube in order.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4556379792762327, -0.006226589598087229, 0.23793047173461196], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6624493796840523, -0.18156387220225265, 0.5212401282150722], \"green_goal\": [0.6493289789920883, -0.17199260658399168, 0.4409563103589825], \"yellow_goal\": [0.6497687457963287, -0.17173964335551295, 0.48094185193350014]}"
    },
    {
        "instruction": "Please put the blue square on the yellow square first, and then put the red square on the blue square.",
        "code": "```python\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45651465964681237, -0.0054961631493231815, 0.23788453769480994], \"gripper_state\": \"open\", \"red_goal\": [0.7357913540367891, -0.21636496183494897, 0.5209165115630698], \"blue_goal\": [0.7195380096020549, -0.22710895342309712, 0.4808157927407183], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.704083130318529, -0.23976565765837737, 0.4409563228383565]}"
    },
    {
        "instruction": "Place the red block on the yellow block, then stack the green block on top.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558469551142573, -0.005463380795295339, 0.2379001392795292], \"gripper_state\": \"open\", \"red_goal\": [0.716502271981959, -0.2305514308979881, 0.4808834599904895], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7243972687678962, -0.22837419800657022, 0.5209521845940713], \"yellow_goal\": [0.7040746678733314, -0.23976161507064286, 0.4409563142749391]}"
    },
    {
        "instruction": "Stack the green and blue cubes on top of the yellow cube in order.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45574987690610685, -0.005704550827269386, 0.237913925439103], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.727054370539563, -0.22871920198537912, 0.5211399529934143], \"green_goal\": [0.710395249878631, -0.23925453260941365, 0.48089393137742936], \"yellow_goal\": [0.7040784672852488, -0.23965218204578612, 0.4409563121934449]}"
    },
    {
        "instruction": "Please put the red square on the blue square first, then put the green square on the red square, and finally to put the yellow square on the green square.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44554136860334853, 0.010023805802307554, 0.24172805375293188], \"gripper_state\": \"open\", \"red_goal\": [0.3844194128149056, 0.18185349572534396, 0.48084433540345994], \"blue_goal\": [0.3790623866090988, 0.1830809448124881, 0.44094177443742194], \"green_goal\": [0.3849848300052852, 0.17922551809383053, 0.5208218131076402], \"yellow_goal\": [0.39666380704083726, 0.18006849316425486, 0.5607690962135986]}"
    },
    {
        "instruction": "Place the green block on the blue block, then place the yellow block on the green block, and finally to stack the red block on top.",
        "code": "```python\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44582894301630777, 0.009443289015707443, 0.24139074931122212], \"gripper_state\": \"open\", \"red_goal\": [0.39749100517175845, 0.1763480172650048, 0.5611124712063237], \"blue_goal\": [0.3789312015998874, 0.18310126792670361, 0.44094177722173994], \"green_goal\": [0.380097513445835, 0.17939041399825584, 0.4809121595519586], \"yellow_goal\": [0.3867083381396941, 0.17699051002455368, 0.5208572287871096]}"
    },
    {
        "instruction": "Stack the yellow, red and green cubes on top of the blue cube in order.",
        "code": "```python\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4465119080168657, 0.010093751880113511, 0.24125699711185938], \"gripper_state\": \"open\", \"red_goal\": [0.4017540633892726, 0.17882692469188652, 0.5206626913021793], \"blue_goal\": [0.37893222939914023, 0.18297798782255445, 0.4409418045150554], \"green_goal\": [0.41201303425001856, 0.18426043113671503, 0.560555913247932], \"yellow_goal\": [0.38791070329348515, 0.18153337701890904, 0.4808221216329919]}"
    },
    {
        "instruction": "Please put the yellow square on the red square first, then put the blue square on the yellow square, and finally to put the green square on the blue square.",
        "code": "```python\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45497852318351256, 0.008930828344013268, 0.2397614434452166], \"gripper_state\": \"open\", \"red_goal\": [0.537204883556402, 0.22523558038087638, 0.44094178145276225], \"blue_goal\": [0.5523112075349793, 0.2323857951847192, 0.5208127422240421], \"green_goal\": [0.5629294342642583, 0.23717766029867707, 0.5607726874368009], \"yellow_goal\": [0.542766862894797, 0.22653338919243554, 0.4808784481314646]}"
    },
    {
        "instruction": "Place the blue block on the red block, then place the green block on the blue block, and finally to stack the yellow block on top.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4539256847842284, 0.007590128269772606, 0.23926485498647393], \"gripper_state\": \"open\", \"red_goal\": [0.537300853270258, 0.22537081181698337, 0.44094179774809766], \"blue_goal\": [0.5441670842917937, 0.22893029067110054, 0.4808694796063055], \"green_goal\": [0.5530384793337096, 0.2322075261170927, 0.5207730937948691], \"yellow_goal\": [0.5579098583504697, 0.23178623423498057, 0.5607333322975349]}"
    },
    {
        "instruction": "Stack the green, yellow and blue cubes on top of the red cube in order.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4551855758468292, 0.009922833615153647, 0.2402311148729957], \"gripper_state\": \"open\", \"red_goal\": [0.5372719741983731, 0.22535334613849078, 0.44094177225424935], \"blue_goal\": [0.5528582727501733, 0.22516110791983557, 0.5615403455806915], \"green_goal\": [0.5400162728959034, 0.22525451765896445, 0.48091142416338134], \"yellow_goal\": [0.5405222759021031, 0.22483823532962877, 0.520896618340759]}"
    },
    {
        "instruction": "Please put the yellow square on the green square first, then put the red square on the yellow square, and finally to put the blue square on the red square.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4578766446651454, -0.007194866847244658, 0.239136167017915], \"gripper_state\": \"open\", \"red_goal\": [0.661968450242101, -0.18139236540106654, 0.5208274458133145], \"blue_goal\": [0.6761991399736224, -0.18889964195305023, 0.561172582916626], \"green_goal\": [0.6493411756977264, -0.1720058403754092, 0.4409417844266359], \"yellow_goal\": [0.6498279991202542, -0.17179372836006854, 0.4809190581939214]}"
    },
    {
        "instruction": "Place the red block on the green block, then place the yellow block on the red block, and finally to stack the blue block on top.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45715074842229136, -0.006910616070975748, 0.23899027746561446], \"gripper_state\": \"open\", \"red_goal\": [0.6573189019760797, -0.17990254682390258, 0.48083347668393167], \"blue_goal\": [0.671765966568532, -0.19191238170871866, 0.5611062340105799], \"green_goal\": [0.6491794288039444, -0.17176576351503958, 0.44094179013118145], \"yellow_goal\": [0.6586800876106612, -0.18332860581067284, 0.520794884961986]}"
    },
    {
        "instruction": "Stack the blue, yellow and red cubes on top of the green cube in order.",
        "code": "```python\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4564933079833904, -0.006433045059396571, 0.2388698205327638], \"gripper_state\": \"open\", \"red_goal\": [0.6713938274344449, -0.18877976446502384, 0.5611456128924681], \"blue_goal\": [0.6576176176244726, -0.17896828023527145, 0.4808997046901098], \"green_goal\": [0.6490718485728187, -0.17158201325668732, 0.44094178600507], \"yellow_goal\": [0.6576523287478033, -0.17956735852352662, 0.5208843858906761]}"
    },
    {
        "instruction": "Please put the green square on the yellow square first, then put the red square on the green square, and finally to put the blue square on the red square.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4560986354581388, -0.005437589889319236, 0.2384770645523862], \"gripper_state\": \"open\", \"red_goal\": [0.7284321988572225, -0.22695683516107212, 0.5205641298761102], \"blue_goal\": [0.7454331850230846, -0.21720319957841572, 0.5608076658473075], \"green_goal\": [0.7106029549685918, -0.23911896670943936, 0.48083494032035845], \"yellow_goal\": [0.7041066727999512, -0.2396319482266351, 0.44094181915867237]}"
    },
    {
        "instruction": "Place the red block on the yellow block, then place the green block on the red block, and finally to stack the blue block on top.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45660834839297043, -0.005709015570944841, 0.23850269852737832], \"gripper_state\": \"open\", \"red_goal\": [0.7167976514868886, -0.2303409053355501, 0.4807684065120521], \"blue_goal\": [0.7435055624140953, -0.2192080582521465, 0.5608664854551991], \"green_goal\": [0.7250311216340835, -0.2279315143281808, 0.5206265111160788], \"yellow_goal\": [0.704101898638365, -0.23974533068039589, 0.4409418284042488]}"
    },
    {
        "instruction": "Stack the blue, green and red cubes on top of the yellow cube in order.",
        "code": "```python\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45662181963842174, -0.005616461815453222, 0.23850837835251598], \"gripper_state\": \"open\", \"red_goal\": [0.7477619777616781, -0.21227725614524376, 0.560457313100879], \"blue_goal\": [0.7203291431656862, -0.2262953450657769, 0.4807084816586814], \"green_goal\": [0.7291432947891581, -0.22108016932745583, 0.5203265562042867], \"yellow_goal\": [0.7040988934218263, -0.23975847937901423, 0.440941826854291]}"
    },
    {
        "instruction": "Place the blue square in the black cup.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red cube and place it on the black mug.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473911090043061, -0.013597761772209598, 0.23986061092085026], \"gripper_state\": \"open\", \"red_goal\": [0.4520656589091759, -0.09686027566498318, 0.44098542662586493], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it on the black mug.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473973806459677, -0.014196522688154172, 0.23997910144964757], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4421959372477968, -0.09614438217563534, 0.4409852633130375], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please put the yellow block into the balck mug.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44752332611744816, -0.01213623089849384, 0.23965504111720776], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44189921250125963, -0.09822577176723968, 0.44106476570180503]}"
    },
    {
        "instruction": "Place the blue square in the white cup.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45656951002887625, -0.004353680443126485, 0.23752380378691257], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7787252985793175, -0.1555373461552459, 0.44148282416372575], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red cube and place it on the white mug.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45656202535350043, -0.00436594002623938, 0.237516870636806], \"gripper_state\": \"open\", \"red_goal\": [0.7770124308464101, -0.15317701509527737, 0.44112181199138606], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it on the white mug.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4571292637530059, -0.004483129932589993, 0.23759134184405467], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691426789370281, -0.14629278490032951, 0.44097864546837223], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please put the yellow block into the white mug.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565463046304906, -0.0043856474719165236, 0.23751298208542787], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684495090903805, -0.144381448635487, 0.44098542610867963]}"
    },
    {
        "instruction": "Please put the blue square on the black cup first, and then put the red square on the blue square.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4508014059557709, -0.013197871476443215, 0.23700398804184125], \"gripper_state\": \"open\", \"red_goal\": [0.46593553234876905, -0.09297520441809076, 0.4809360793458645], \"blue_goal\": [0.45722366828205524, -0.09650921932529946, 0.4409708599349679], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red block and place it on the black mug first, then stack the green block on top of the red block.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4503773344023712, -0.015237777658361946, 0.2370253068337363], \"gripper_state\": \"open\", \"red_goal\": [0.45194948539587726, -0.0968716772126787, 0.440970862275089], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4531460703517144, -0.09400291454612193, 0.48096075108822783], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it on the black mug first, then put the blue block on top of the green block.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45134300963729346, -0.0173064415101037, 0.23846926317247025], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45761615688004176, -0.09510600734906188, 0.4812426473218345], \"green_goal\": [0.4421773638860784, -0.09615410151437241, 0.44097086793287005], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the yellow block on the black mug, then place the blue block on the yellow block.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4511509012087731, -0.013365575126697043, 0.23874249983511836], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4547722965210681, -0.09306517380821194, 0.48128768697404434], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4419563181395366, -0.09827865486317151, 0.44097087188413775]}"
    },
    {
        "instruction": "Please put the blue square on the white cup first, and then put the yellow square on the blue square.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567624928906344, -0.004493027736191237, 0.2372893914420286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7791059134016005, -0.15575955687231263, 0.4409708608400164], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7811678296165228, -0.15854686176721142, 0.4809503630659025]}"
    },
    {
        "instruction": "Pick up the red block and place it on the white mug first, then stack the green block on top of the red block.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45668344900244295, -0.004358645083703529, 0.23718183746079063], \"gripper_state\": \"open\", \"red_goal\": [0.7770914510304893, -0.15314196984746334, 0.4409708665714363], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.782627069162612, -0.15647398118421446, 0.4810107935242998], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it on the white mug first, then put the yellow block on top of the green block.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4563340880824042, -0.004327269401546276, 0.23718924585976203], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691484272023125, -0.14627950491493938, 0.44097086078383585], \"yellow_goal\": [0.7719280060749901, -0.14879208665546106, 0.48096038182293005]}"
    },
    {
        "instruction": "Place the yellow block on the white mug, then place the blue block on the yellow block.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568609433760348, -0.004339154348602992, 0.2372022753165956], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7820438463528573, -0.15289903406702582, 0.48137995100612124], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684468675177623, -0.14438101438685103, 0.4409708660200239]}"
    },
    {
        "instruction": "Please put the blue square on the black cup first, then put the red square on the blue square, and finally to put the green square on the red square.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44994510628672346, -0.012264272383175871, 0.2407936872802094], \"gripper_state\": \"open\", \"red_goal\": [0.46595806868002937, -0.0929532210005953, 0.4808861800839105], \"blue_goal\": [0.45722562005104783, -0.09650140167861317, 0.4409563062059545], \"green_goal\": [0.46534564501906645, -0.09102523409545808, 0.5208779030606996], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red block and place it on the black mug first, then stack the green block on top of the red block, and finally to stack the yellow block on top of the green block.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4486780288165423, -0.01276184788178718, 0.24101117325979943], \"gripper_state\": \"open\", \"red_goal\": [0.45196335003918725, -0.09685271720117353, 0.44095631276186115], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.45320507700703005, -0.09397263802977644, 0.4809166669555495], \"yellow_goal\": [0.45463550566167293, -0.0936327354501132, 0.52095639681573]}"
    },
    {
        "instruction": "Grab the green block and place it on the black mug first, then put the blue block on top of the green block, and finally to put the yellow block on top of the blue block.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4492640284084967, -0.013457099263330259, 0.2411196587107723], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45817019624412475, -0.09508966658717569, 0.48086517558952846], \"green_goal\": [0.44221111983413475, -0.09614573408802224, 0.4409563163543119], \"yellow_goal\": [0.4599346064494022, -0.09447000790918708, 0.5208363335503229]}"
    },
    {
        "instruction": "Place the yellow block on the black mug, then place the blue block on the yellow block, and finally to place the red block on the blue block.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44923308611918517, -0.012642977115606694, 0.24124402866519817], \"gripper_state\": \"open\", \"red_goal\": [0.466933726046686, -0.09198865046631458, 0.5208372852230327], \"blue_goal\": [0.4550461336539154, -0.09304509130863775, 0.4808750700836314], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44198128351474175, -0.09829732888254149, 0.44095630794694823]}"
    },
    {
        "instruction": "Please put the blue square on the white cup first, then put the yellow square on the blue square, and finally to put the green square on the yellow square.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565553204015095, -0.004394102890667655, 0.23769544145578209], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7791048446256316, -0.15576926050662684, 0.4409563110666815], \"green_goal\": [0.7902442706153379, -0.1629986696697642, 0.521104951249349], \"yellow_goal\": [0.7811342946993424, -0.15854731784322612, 0.48091600074422397]}"
    },
    {
        "instruction": "Pick up the red block and place it on the white mug first, then stack the green block on top of the red block, and finally to stack the yellow block on top of the green block.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565890411210329, -0.004459315122263288, 0.23763390097465314], \"gripper_state\": \"open\", \"red_goal\": [0.7771076162474115, -0.1531484101126919, 0.44095630618668075], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7826411755797837, -0.15646274711764158, 0.4809123675340369], \"yellow_goal\": [0.7849962844848218, -0.15861450901602642, 0.5208979037548147]}"
    },
    {
        "instruction": "Grab the green block and place it on the white mug first, then put the yellow block on top of the green block, and finally to put the blue block on top of the yellow block.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45730974020667053, -0.004526899240347623, 0.2377296679070417], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7854584193325174, -0.15709038394327635, 0.5213131548551354], \"green_goal\": [0.7691482626609596, -0.14628927153270532, 0.4409563012593312], \"yellow_goal\": [0.7719225298881565, -0.14880892048866698, 0.4809363011206946]}"
    },
    {
        "instruction": "Place the yellow block on the white mug, then place the blue block on the yellow block, and finally to place the red block on the blue block.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45773807181707776, -0.0045858001054675974, 0.23774618942550169], \"gripper_state\": \"open\", \"red_goal\": [0.7968298756759546, -0.16247536831020354, 0.5212215626023957], \"blue_goal\": [0.7824417070495511, -0.15310488338145953, 0.480864398531306], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684614427992273, -0.1443976725602295, 0.44095632098551263]}"
    },
    {
        "instruction": "First to put the blue cube on the black mug, then stack the red, green and yellow cubes on top of the blue cube in order, and finally to move the gripper 10cm over the green block.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46437001356115915, -0.08988672580233047, 0.31027664246071124], \"gripper_state\": \"open\", \"red_goal\": [0.466034782347675, -0.09299179700235043, 0.48087757600481534], \"blue_goal\": [0.45724642897146567, -0.09651341649813816, 0.44094181154024253], \"green_goal\": [0.46544580893599863, -0.0911061687012149, 0.5208652608188532], \"yellow_goal\": [0.4656116178034197, -0.0864666843430499, 0.5610727049872227]}"
    },
    {
        "instruction": "Place the red block on the black mug, then place the yellow block on the red block, then place the blue block on the yellow block, then to place the green block on the blue block, and finally to move the gripper 10cm over the blue block.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46653176408679453, -0.08422712779457979, 0.31037304364386603], \"gripper_state\": \"open\", \"red_goal\": [0.4535899084019871, -0.09480234998263594, 0.440941782185444], \"blue_goal\": [0.4674597264117418, -0.08465053386502072, 0.52080709952594], \"green_goal\": [0.47048774276119537, -0.0810598426452472, 0.5607643777457973], \"yellow_goal\": [0.45402879348829345, -0.09281544021867072, 0.4809151313664442]}"
    },
    {
        "instruction": "First to put the yellow cube on the white mug, then stack the red, green and blue cubes on top of the yellow cube in order.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45683124679129583, -0.0043853884640540275, 0.23804870213483925], \"gripper_state\": \"open\", \"red_goal\": [0.7821914822123035, -0.15452687393097386, 0.4807833077412484], \"blue_goal\": [0.8071031870693554, -0.16971916335109416, 0.5610046735324346], \"green_goal\": [0.7921192541883234, -0.1593711219253185, 0.5205725219773757], \"yellow_goal\": [0.7687890872594466, -0.14476130709661325, 0.4409418273681911]}"
    },
    {
        "instruction": "Place the red block on the white mug, then place the yellow block on the red block, then place the blue block on the yellow block, and finally to place the green block on the blue block.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574699277030688, -0.004600896716447368, 0.2381604393573033], \"gripper_state\": \"open\", \"red_goal\": [0.777072818472296, -0.15326507191077088, 0.44094178869362316], \"blue_goal\": [0.791647484781448, -0.16546284706523698, 0.5208166261377857], \"green_goal\": [0.8028841482226026, -0.1687056985161293, 0.5610884940165209], \"yellow_goal\": [0.7791338180451995, -0.15649209412904047, 0.48090930056119513]}"
    },
    {
        "instruction": "Move the 'Sky' colored square 10cm to the right of the 'Blood' colored square.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45419490299300747, 0.005620434483279305, 0.23714679509116282], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.545409517090355, 0.13117068840840718, 0.4413021042078148], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Sea' colored block 10cm behind the 'lemon' colored block.",
        "code": "```python\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.454390988219317, -0.007582468901269112, 0.23727489260153484], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6187292299260286, -0.22904761033109744, 0.44102440163221124], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Ocean' colored block 10cm in front of the mug of the 'Night' color.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4580228841644996, -0.008510243409695936, 0.23678509830654187], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5540456829324969, -0.09512872515270801, 0.4412547234144763], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Blood' colored square 10cm to the left of the 'Leaf' colored square.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45653678665279085, -0.004037343483015739, 0.23716188991896742], \"gripper_state\": \"open\", \"red_goal\": [0.6572182729012368, -0.07783102679453992, 0.44102405450207194], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Apple' colored block 10cm behind the banana colored block.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4543835838391591, -0.00759420835916327, 0.23727448402701606], \"gripper_state\": \"open\", \"red_goal\": [0.6152685385139434, -0.23258889306056835, 0.4409853323409152], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Fire' colored block 10cm to the left of the mug of the 'Snow' color.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4576447650104416, -0.00285287806563798, 0.23697265179959465], \"gripper_state\": \"open\", \"red_goal\": [0.7756522519170892, -0.050972613937747234, 0.4410410176782026], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Leaf' colored square 15cm to the right of the 'cherry' colored square.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45458584465785556, 0.003834926562583876, 0.2366668666905581], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5376408782262663, 0.07780991553617507, 0.44098542526104134], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Environment-protect' colored block 10cm behind the banana colored block.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45385627101061976, -0.007511524192629284, 0.23730098366461166], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6105309156171589, -0.23904024686418038, 0.4409854235114678], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Emerald' colored block 10cm to the left of the mug of the 'Shady' color.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44482247557449067, 8.137697816929315e-06, 0.22131386798323932], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.43822637971162165, -0.0018042968149216668, 0.4409828013321142], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 'Banana' colored square 15cm to the left of the 'Leaf' colored square.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4572477343179283, -0.0025112559916626812, 0.23712417042110218], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6499894154663287, -0.02619697757137846, 0.44098541159912463]}"
    },
    {
        "instruction": "Move the 'Lemon' colored block 10cm to the right of the apple colored block.",
        "code": "```python\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45337627041935585, 0.005330634123270536, 0.23683651361842367], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5406292161566374, 0.1255475411398638, 0.44098419671465966]}"
    },
    {
        "instruction": "Move the 'Sandy' colored block 18cm in front of the mug with the 'Night' color.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.18, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45725850898873965, -0.004286987366976814, 0.23660849953088686], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6207489158532374, -0.09779456441742063, 0.4410015302638265]}"
    },
    {
        "instruction": "Stake the sky colored block on top of the bloody colored block, then pile the grass colored block on top of the banana colored block.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4557315136644094, -0.005669320688295969, 0.23735913765717703], \"gripper_state\": \"open\", \"red_goal\": [0.5372723412449595, 0.22535947344173982, 0.44097086020698856], \"blue_goal\": [0.5439799669059961, 0.22885739553086376, 0.4809489144506785], \"green_goal\": [0.7103377177874762, -0.2395748716568677, 0.4809404123369285], \"yellow_goal\": [0.7040827144437165, -0.23963708668188374, 0.4409708587289267]}"
    },
    {
        "instruction": "Stake the fire colored block on top of the sandy colored block, then pile the grass colored block on top of the fire colored block.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558469551142573, -0.005463380795295339, 0.2379001392795292], \"gripper_state\": \"open\", \"red_goal\": [0.716502271981959, -0.2305514308979881, 0.4808834599904895], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7243972687678962, -0.22837419800657022, 0.5209521845940713], \"yellow_goal\": [0.7040746678733314, -0.23976161507064286, 0.4409563142749391]}"
    },
    {
        "instruction": "Stake the apple colored block on top of the leaf colored block, then pile the ocean colored block on top of the blood colored block.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4555918448935053, -0.006201204626835665, 0.23786915535755843], \"gripper_state\": \"open\", \"red_goal\": [0.6585886527944955, -0.18107189908281635, 0.48088087547989683], \"blue_goal\": [0.670427478200478, -0.1914106093115768, 0.5211427125315509], \"green_goal\": [0.6493341914325417, -0.17200338949134664, 0.4409563084578866], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stake the cherry colored block on top of the leaf colored block, then pile the banana colored block on top of the apple colored block, and finally to put the apple colored block on the topest.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\n\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45715074842229136, -0.006910616070975748, 0.23899027746561446], \"gripper_state\": \"open\", \"red_goal\": [0.6573189019760797, -0.17990254682390258, 0.48083347668393167], \"blue_goal\": [0.671765966568532, -0.19191238170871866, 0.5611062340105799], \"green_goal\": [0.6491794288039444, -0.17176576351503958, 0.44094179013118145], \"yellow_goal\": [0.6586800876106612, -0.18332860581067284, 0.520794884961986]}"
    },
    {
        "instruction": "Place the watermelon colored squares into the black mug.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473973806459677, -0.014196522688154172, 0.23997910144964757], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4421959372477968, -0.09614438217563534, 0.4409852633130375], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the blood colored block and place it in the dark colored mug.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473911090043061, -0.013597761772209598, 0.23986061092085026], \"gripper_state\": \"open\", \"red_goal\": [0.4520656589091759, -0.09686027566498318, 0.44098542662586493], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the lemon colored cube and place it in the milk colored cup.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565463046304906, -0.0043856474719165236, 0.23751298208542787], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684495090903805, -0.144381448635487, 0.44098542610867963]}"
    },
    {
        "instruction": "Pick up the sky colored block and put it on the milk colored mug.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45656951002887625, -0.004353680443126485, 0.23752380378691257], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7787252985793175, -0.1555373461552459, 0.44148282416372575], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the sea colored block in the snow colored cups, and then stack the yellow block on top of the sea colored block.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567624928906344, -0.004493027736191237, 0.2372893914420286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7791059134016005, -0.15575955687231263, 0.4409708608400164], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7811678296165228, -0.15854686176721142, 0.4809503630659025]}"
    },
    {
        "instruction": "Grab the cucumber colored block and place it on the milk colored cup, then stack the sand colored block on top of the cucumber colored block.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4563340880824042, -0.004327269401546276, 0.23718924585976203], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691484272023125, -0.14627950491493938, 0.44097086078383585], \"yellow_goal\": [0.7719280060749901, -0.14879208665546106, 0.48096038182293005]}"
    },
    {
        "instruction": "Stack the blood, sky, and grass colored blocks into the night colored mug in turn.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4500822537308507, -0.012215490317476489, 0.24077534429871555], \"gripper_state\": \"open\", \"red_goal\": [0.4521431498544622, -0.09699382673203476, 0.4409563138794121], \"blue_goal\": [0.4676919774927069, -0.09136463020869885, 0.4808476190841924], \"green_goal\": [0.46770698019106105, -0.08913418863325873, 0.5208376027364007], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the banana, watermelon, and apple colored blocks into the milk colored mug in turn.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45681689222076005, -0.004440526658061532, 0.23765449014698087], \"gripper_state\": \"open\", \"red_goal\": [0.7878433694818481, -0.15998994721860862, 0.521219612433454], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7746299917263164, -0.1480539805352648, 0.48091190943158396], \"yellow_goal\": [0.7685344395161979, -0.14435224302588534, 0.4409563114996926]}"
    },
    {
        "instruction": "Stack the lemon, apple, ocean and leaf colored blocks into the milk colored mug in turn.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4576340712351715, -0.004515301747127391, 0.23814044749591762], \"gripper_state\": \"open\", \"red_goal\": [0.7821416286529852, -0.15395173817026664, 0.48082110738837625], \"blue_goal\": [0.7984694759864568, -0.1621057839842223, 0.5203416789300807], \"green_goal\": [0.8087381046034603, -0.16403084904998905, 0.5607590407159089], \"yellow_goal\": [0.7685301240093783, -0.14448080994207682, 0.44094182941072657]}"
    },
    {
        "instruction": "Stack the cherry, sandy, sky, and grass colored blocks into the cream colored mug in turn.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574699277030688, -0.004600896716447368, 0.2381604393573033], \"gripper_state\": \"open\", \"red_goal\": [0.777072818472296, -0.15326507191077088, 0.44094178869362316], \"blue_goal\": [0.791647484781448, -0.16546284706523698, 0.5208166261377857], \"green_goal\": [0.8028841482226026, -0.1687056985161293, 0.5610884940165209], \"yellow_goal\": [0.7791338180451995, -0.15649209412904047, 0.48090930056119513]}"
    },
    {
        "instruction": "Move the block with the 'fiery' color 15cm to the left of the green block and then stack the yellow cube on top of the blue block.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475751547626359, 0.014056005659700093, 0.23856254445674713], \"gripper_state\": \"open\", \"red_goal\": [0.6570749526308295, -0.030016842836600076, 0.44098542724196665], \"blue_goal\": [0.3789542815243221, 0.18298339800742874, 0.4409708643551448], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.388212032665536, 0.1840770867779608, 0.48109340059281497]}"
    },
    {
        "instruction": "Please position the block with the 'sunny' color 20cm behind the black mug, and then stack the green cube on top of the blue block.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([-0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4476520415136627, 0.013240267333776224, 0.23855575507828802], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3789211627872444, 0.18308889411212897, 0.4409708612047668], \"green_goal\": [0.3826245722932382, 0.18087333544466935, 0.4809438491687286], \"yellow_goal\": [0.23643226118441465, -0.09454974987319563, 0.44098542724196665]}"
    },
    {
        "instruction": "Position the block with the 'sandy' color 15cm behind the green block, then stack the red cube on top of the blue block.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4474481633413157, 0.014815106639028807, 0.2385238011864314], \"gripper_state\": \"open\", \"red_goal\": [0.38290672755829763, 0.18445484245776456, 0.48096005743297837], \"blue_goal\": [0.3789756302574076, 0.18315904546516845, 0.4409708604510571], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.497329880177295, -0.1736155305593033, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the block with the 'leafy' color 20cm in front of the black mug and then stack the yellow cube on top of the red block.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.454068081379616, 0.00882938923963359, 0.2366093179482946], \"gripper_state\": \"open\", \"red_goal\": [0.5371772135452061, 0.22524790707873196, 0.4409708673780837], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6384460013905081, -0.10021980640188954, 0.44098542724196665], \"yellow_goal\": [0.541894268120257, 0.22349669831884655, 0.48098199491276045]}"
    },
    {
        "instruction": "Position the green block 15cm behind the mug of the 'shady' color, then stack the red cube on top of the blue block.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475573476044742, 0.013945399142979199, 0.23856479255959767], \"gripper_state\": \"open\", \"red_goal\": [0.3835202021898947, 0.18220559319922747, 0.4809503364724533], \"blue_goal\": [0.3790505034201251, 0.18308796541999137, 0.4409708602894919], \"green_goal\": [0.2924548220277663, -0.09781473210862038, 0.4409854272419666], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the block with the sky color and place it 15cm right to the red block, then stack the yellow cube on top of the green block.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.454823093619185, -0.005777822912789356, 0.2370324842080141], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5465028633216432, 0.08225127099597179, 0.4409854272419667], \"green_goal\": [0.6493332328105877, -0.17199340522050224, 0.4409708602571514], \"yellow_goal\": [0.6499673661991303, -0.17268177448558109, 0.48096346992037964]}"
    },
    {
        "instruction": "Grab the block with the 'sandy' color and place it 12cm left to the black mug, then stack the blue cube on top of the red block.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.12, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45582464427309416, 0.01070242482241016, 0.23711208381213217], \"gripper_state\": \"open\", \"red_goal\": [0.5373977120404915, 0.22538287709961277, 0.44097086831667176], \"blue_goal\": [0.5426039115886105, 0.22892037829115425, 0.4811042040698682], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4410059761473437, 0.022822921829117573, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the block with the 'fiery' color 15cm in front of the black mug and then stack the green cube on top of the blue cube.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.15, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44769838820176167, 0.013145957035220973, 0.2386137974835823], \"gripper_state\": \"open\", \"red_goal\": [0.604605582280142, -0.09525419026101567, 0.44098542724196665], \"blue_goal\": [0.37886003748622943, 0.18308315121899932, 0.4409708656913312], \"green_goal\": [0.3801288361891045, 0.18014058889177936, 0.48095012887371286], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Take the block with the 'leafy' color and put it 15cm left to the black mug, then stack the red cube on top of the blue block.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44743096848908975, 0.014071938434182092, 0.23849116281634392], \"gripper_state\": \"open\", \"red_goal\": [0.3848067808352212, 0.1810553778363445, 0.4809470273641208], \"blue_goal\": [0.37904420594792254, 0.18309186577445039, 0.4409708628737947], \"green_goal\": [0.4430278355208677, 0.05169393019656283, 0.44098542724196665], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the squares with the 'lemon' color on top of the red square, then place the green square 15cm in front of the cup with the color associated with the 'night'.",
        "code": "```python\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.15, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4570339724256967, -0.006792526238427172, 0.2361516774840316], \"gripper_state\": \"open\", \"red_goal\": [0.5371840307180785, 0.22522538979846032, 0.44097086018354587], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5879405669728079, -0.10017981205621436, 0.4409854245567876], \"yellow_goal\": [0.5426725664843733, 0.22648528651167438, 0.48095987919318467]}"
    },
    {
        "instruction": "Stack the squares with the 'sea' color on top of the squares with the 'leaf' color, then place the yellow square 15cm right to the cup with the color associated with the 'night'.",
        "code": "```python\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45162894711188717, -0.012024285799672199, 0.23675841877566567], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6576263544027834, -0.17882638403394943, 0.48094615206405494], \"green_goal\": [0.6490649098672002, -0.17156678008852458, 0.440970860285776], \"yellow_goal\": [0.4365771703711522, -0.2446506434532771, 0.44097537098810313]}"
    },
    {
        "instruction": "Please place the square with the blood color 10cm to the left of the square with the fresh grass color, and then place the square with the ocean color into the black cup.",
        "code": "```python\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4480040098878125, -0.015044785734666204, 0.24055467018097104], \"gripper_state\": \"open\", \"red_goal\": [0.6571784519827475, -0.07779225120589028, 0.4409854272419667], \"blue_goal\": [0.4560487088571922, -0.09534302491486353, 0.44132125281688195], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the block with the ocean color 10cm in front of the cup with the night color, then place the block with the banana color into the cup with the milk color.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565418132666768, -0.00439247045546088, 0.23751662965924675], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5541900227819522, -0.09500330967853693, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7686671100420834, -0.14458415819040454, 0.4409854264525845]}"
    },
    {
        "instruction": "Place the grass colored cube 10cm in front of the apple colored cube, then place the lemon colored cube in the night colored mug.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.447605781910194, -0.011945188246324954, 0.23977427548272362], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6471251559315191, 0.23040890820990748, 0.44098542724196665], \"yellow_goal\": [0.4386067593188936, -0.09805260574331344, 0.44114057116876365]}"
    },
    {
        "instruction": "Place the lemon colored block in the milk colored mug, then place the cherry colored block 10cm behind the cucumber colored block.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530327243779526, -0.007603696344076038, 0.2369752209836708], \"gripper_state\": \"open\", \"red_goal\": [0.5601151051046989, -0.18251412864872274, 0.4412213168719099], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768452055176101, -0.1443818878372627, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the apple colored block 10cm in front of the ocean colored block, then place the banana colored block 10cm to the right of the apple colored block, and finally place the grass colored block on the milk colored mug.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565734652303457, -0.004353187399074958, 0.23752634963183666], \"gripper_state\": \"open\", \"red_goal\": [0.48473105909798175, 0.18383419037894996, 0.44098542724196665], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7692910502653793, -0.14638176353864826, 0.44097973270281343], \"yellow_goal\": [0.488143675540064, 0.0852103596024316, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the ocean colored block 10cm to the right of the apple colored block, then place the banana colored block 10cm to behind the apple colored block, and finally place the grass colored block on the milk colored mug.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45714014399329966, -0.004474959060239911, 0.23762411881075057], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5456458050900981, 0.1312710683803587, 0.44098542724196665], \"green_goal\": [0.7687780306678241, -0.14668810172309724, 0.44098300782562305], \"yellow_goal\": [0.445786999488224, 0.2279128787319958, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the banana colored block 10cm to the right of the watermelon colored block, then place the blood colored block 10cm to behind the banana colored block, and finally place the ocean colored block on the night colored mug.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44807327973999694, -0.014804822955445229, 0.2405702518855632], \"gripper_state\": \"open\", \"red_goal\": [0.5681047025153599, -0.28743822866087543, 0.4409879569422143], \"blue_goal\": [0.45731264867974375, -0.09382473273187296, 0.44125334520551346], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6503217782214945, -0.2748220681698004, 0.4409876905428412]}"
    },
    {
        "instruction": "Place the grass colored block 10cm to the right of the strawberry colored block, then place the sandy colored block 10cm to behind the grass colored block, and finally place the ocean colored block on the night colored mug.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44797984120057976, -0.015234279754874566, 0.24053262656118995], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45386085550454563, -0.09685719002259975, 0.44158434922539214], \"green_goal\": [0.5375750363434184, 0.12391384929137106, 0.44098542724196665], \"yellow_goal\": [0.44249078321788804, 0.12312289286073715, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the sea colored block into the night colored cup, and then put the bloody colored block into the milk colored cup.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565299082291649, -0.004401758884205064, 0.23753346006681703], \"gripper_state\": \"open\", \"red_goal\": [0.7769424085667864, -0.15643989809508266, 0.4411432478236699], \"blue_goal\": [0.45721574547184013, -0.09651284368503224, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Put the lemon colored block into the milk colored mug, and then put the grass colored block into the night colored mug.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44728338537954915, -0.01484513395812164, 0.24009042390342455], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4453728982625195, -0.09562622402682393, 0.44098542708018146], \"yellow_goal\": [0.7684520556111127, -0.14438188803465316, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the grass colored cube into the cream colored mug, then put the apple colored cube into the night colored mug, and finally stack the ocean colored cube onto the grass colored cube.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568823282305961, -0.004441641175002412, 0.23717324640111564], \"gripper_state\": \"open\", \"red_goal\": [0.4534333499553278, -0.095982193667656, 0.44098542724196665], \"blue_goal\": [0.7821326656627524, -0.15811642510142268, 0.4814097888242255], \"green_goal\": [0.7691490887163527, -0.14634037196715602, 0.44097086567382854], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Put the banana colored block into the cream colored mug, then put the cherry colored block into the night colored mug, and finally stack the grass colored block onto the cherry colored block.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45043459949980713, -0.014687365242502262, 0.23702047473262894], \"gripper_state\": \"open\", \"red_goal\": [0.452481746361996, -0.09418797335584393, 0.4409708619022098], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4536756716961335, -0.09170037005699318, 0.4809621951613414], \"yellow_goal\": [0.768452055196776, -0.1443818878399032, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the emerald colored cube into the milk colored mug, then put the ocean colored cube into the night colored mug, then stack the butter colored cube onto the ocean colored cube, and finally stack the blood colored cube onto the emerald colored cube.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\":[0.45632592047809345,-0.004335687984486601,0.23721858230440335],\"gripper_state\":\"open\",\"red_goal\":[0.7799352817162585,-0.155036976510611,0.4810310244059187],\"blue_goal\":[0.4559889615577288,-0.09569119811000965,0.44097086015812054],\"green_goal\":[0.7691832685367092,-0.14636169647646838,0.44097086610206576],\"yellow_goal\":[0.4565269030015592,-0.09383902341715324,0.48096313344238206]}"
    },
    {
        "instruction": "Put the ocean colored cube into the night colored mug, then stack the apple colored cube onto the ocean colored cube, then put the grass colored cube into the milk colored mug, and finally stack the lemon colored cube onto the grass colored cube.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45633480351310335, -0.004264044077598728, 0.23746998719696405], \"gripper_state\": \"open\", \"red_goal\": [0.4659426377016968, -0.0929742502934342, 0.48093587898260637], \"blue_goal\": [0.45722242053170686, -0.09651104769025677, 0.4409708602352164], \"green_goal\": [0.7690316905316618, -0.1474238796948938, 0.4409708612185838], \"yellow_goal\": [0.7706020359112147, -0.1497584265104371, 0.4809508223578768]}"
    },
    {
        "instruction": "Place the ocean, grass, and apple colored cube into the milk colored mug in order, and then place the lemon colored block into the night colored mug.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473885154108059, -0.012847337873570114, 0.23970307457987122], \"gripper_state\": \"open\", \"red_goal\": [0.7980784939620162, -0.17071621408801962, 0.5208063352267512], \"blue_goal\": [0.7791149902352486, -0.15578201838889763, 0.44095631160186716], \"green_goal\": [0.7839692810812927, -0.15915729819247515, 0.48090148104564473], \"yellow_goal\": [0.44237403769688444, -0.09640180562675436, 0.44102528962928883]}"
    },
    {
        "instruction": "Place the lemon, emerald, and sky colored cube into the milk colored mug in order, and then place the strawberry colored block into the night colored mug.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733153392316366, -0.013465010255945545, 0.23981358429523864], \"gripper_state\": \"open\", \"red_goal\": [0.452362502338917, -0.09467016789914709, 0.4409854250741986], \"blue_goal\": [0.7879560940779837, -0.15999331453790386, 0.5207770071828444], \"green_goal\": [0.7747409225530487, -0.14812157124879424, 0.4809037501905159], \"yellow_goal\": [0.7685458436923285, -0.14435904377855624, 0.44095631253268797]}"
    },
    {
        "instruction": "Please place the lemon, emerald, blood, and sky colored cube into the milk colored mug in order.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4573081581371782, -0.004549067849447662, 0.23813629280716214], \"gripper_state\": \"open\", \"red_goal\": [0.788576234226527, -0.16044652118454986, 0.5206480289297941], \"blue_goal\": [0.8035559391536219, -0.16895882109759044, 0.5610496689742769], \"green_goal\": [0.7748316267925716, -0.14819635175879523, 0.4808644892478449], \"yellow_goal\": [0.7685553920440187, -0.1443693892629996, 0.4409418022540296]}"
    },
    {
        "instruction": "Please place the sky, strawberry, butter, and grass colored cube into the night colored mug in order, and finally to move the gripper 10cm over the butter colored block.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46572108424331904, -0.08763213062236165, 0.3108067474256226], \"gripper_state\": \"open\", \"red_goal\": [0.46602907797426923, -0.09290469660950107, 0.48083860365761627], \"blue_goal\": [0.45723484571973155, -0.09649900466203419, 0.4409417728246295], \"green_goal\": [0.4721442665562445, -0.08476134235202654, 0.560762681454389], \"yellow_goal\": [0.4658416240878653, -0.08783443288171212, 0.5207964294332131]}"
    },
    {
        "instruction": "Place the grass colored block 15cm to the right of the ocean colored block, then put the bloody colored block into the cream colored mug, and finally stack the butter colored block on top of the bloody colored block.",
        "code": "```python\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567307244461042, -0.004434697357399424, 0.2374255039403645], \"gripper_state\": \"open\", \"red_goal\": [0.7780838953760535, -0.15471867149474236, 0.44097086082929027], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.3806473709914283, 0.035272991786064314, 0.44098542724196665], \"yellow_goal\": [0.7791049259530545, -0.1575077000168044, 0.48096246436376594]}"
    },
    {
        "instruction": "Place the leaf colored block 10cm to the left of the sky colored block, then put the apple colored block into the night colored cup, and finally stack the lemon colored block on top of the apple colored block.",
        "code": "```python\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4501471682074329, -0.014317578377097219, 0.23710608383582993], \"gripper_state\": \"open\", \"red_goal\": [0.45108064230203304, -0.09586496497638583, 0.4409708680348661], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.3832525692265185, 0.2815203183764661, 0.4409878530163192], \"yellow_goal\": [0.4477557531651573, -0.09391734488834631, 0.48108333533955994]}"
    },
    {
        "instruction": "Move the ocean colored block 20cm behind the grass colored block, then place the butter colored block into the milk colored mug, and finally stack the cherry colored block on top of the butter colored block.",
        "code": "```python\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.2, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568386002352434, -0.0044323854991347965, 0.23733465250530733], \"gripper_state\": \"open\", \"red_goal\": [0.781189527579575, -0.15557571045327934, 0.4812814386392326], \"blue_goal\": [0.4600627134536022, -0.18096995659483714, 0.4409860805615068], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7682701185407839, -0.14591348979078037, 0.4409708661160747]}"
    },
    {
        "instruction": "Position the emerald colored block 5cm in front of the blood colored block, then put the banana colored block into the dark colored mug, and finally stack the ocean colored block on top of the blood colored block.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0.05, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4544229517645723, 0.008682753216723911, 0.2369257346856884], \"gripper_state\": \"open\", \"red_goal\": [0.5373529688526462, 0.2253792522025925, 0.4409708669973905], \"blue_goal\": [0.5442859606866157, 0.22766578635077603, 0.48141151446579133], \"green_goal\": [0.5920946678326918, 0.229075175511658, 0.44098542724196665], \"yellow_goal\": [0.4384996735153983, -0.09805652935955009, 0.44098542724196665]}"
    },
    {
        "instruction": "Move the apple colored block 5cm behind the sky colored block, then place the butter colored block into the cream colored mug, and finally stack the blood colored block on top of the butter colored block.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([-0.05, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574127307195409, -0.004511707763324718, 0.23721221994919034], \"gripper_state\": \"open\", \"red_goal\": [0.7831659864273465, -0.15534903828546082, 0.48142506846621597], \"blue_goal\": [0.38948021861647164, 0.18610681699017906, 0.44098542724205625], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768421684539995, -0.14457755882159667, 0.4409708658311653]}"
    },
    {
        "instruction": "Position the strawberry colored block 10cm behind the banana colored block, then put the emerald colored block into the milk colored mug, and finally stack the ocean colored block on top of the emerald colored block.",
        "code": "```python\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568810280298454, -0.004410352019125672, 0.23720149346000158], \"gripper_state\": \"open\", \"red_goal\": [0.6152833758796108, -0.23257431701524334, 0.44098542724196665], \"blue_goal\": [0.7798263513766018, -0.15844036092643005, 0.4814939530203291], \"green_goal\": [0.7682010488409363, -0.14827080847052163, 0.4409708660027051], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the lemon colored block 15cm to the left of the grass colored block, then put the cherry colored block into the night colored mug, and finally stack the sky colored block on top of the cherry colored block.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4525631229006222, -0.01285212853706252, 0.23874038487323918], \"gripper_state\": \"open\", \"red_goal\": [0.45378853886947407, -0.09125386641278606, 0.44097087405050667], \"blue_goal\": [0.46858684429290853, -0.08595025671620767, 0.4812094301092815], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6499768868718201, -0.026191561564676374, 0.44098542724196665]}"
    },
    {
        "instruction": "Move the ocean colored block 10cm behind the butter colored block, then place the blood colored block into the dark colored mug, and finally stack the grass colored block on top of the ocean colored block.",
        "code": "```python\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45465984774078666, -0.007485086940518125, 0.2373067282594648], \"gripper_state\": \"open\", \"red_goal\": [0.4539036871812422, -0.09595099183743448, 0.44098542724196665], \"blue_goal\": [0.6177622584084329, -0.23002311750247612, 0.44097086147622744], \"green_goal\": [0.6224867519665548, -0.2315232220542965, 0.4809542474665716], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Position the banana colored block 10cm behind the emerald colored block, then put the strawberry colored block into the cream colored mug, and finally stack the sky colored block on top of the emerald colored block.",
        "code": "```python\npri.grab('yellow_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\ntarget_pos = green_pos + np.array([0, 0, 0.1])\npri.move(target_pos, green_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45491559911341367, -0.005815582870481178, 0.23708265125001987], \"gripper_state\": \"open\", \"red_goal\": [0.7801134635328808, -0.1574916349960036, 0.4409854272419667], \"blue_goal\": [0.6594168899374474, -0.18186920952452215, 0.48117575849148875], \"green_goal\": [0.6493582354010957, -0.17207098485467426, 0.4409708660451461], \"yellow_goal\": [0.5478406482263702, -0.1733493015041936, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the sky colored block 25cm to the right of the blood colored block, then put the lemon colored block into the milk colored cup, and finally stack the cherry colored block on top of the lemon colored block.",
        "code": "```python\npri.grab('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, -0.25, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568478166445209, -0.004398319108727695, 0.2372316530795176], \"gripper_state\": \"open\", \"red_goal\": [0.7811811530882322, -0.153604303227823, 0.48129184783752854], \"blue_goal\": [0.5498681116704097, -0.01830451087033747, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684838958447557, -0.14459058839969022, 0.4409708660501213]}"
    },
    {
        "instruction": "Move the grass colored block 8cm in front of the ocean colored block, then place the apple colored block into the night colored mug, and finally stack the butter colored block on top of the apple colored block.",
        "code": "```python\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0.08, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4501958294258189, -0.013670642523788917, 0.23714666843393556], \"gripper_state\": \"open\", \"red_goal\": [0.45188369824564006, -0.09658755024444061, 0.4409708671605415], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4592949793546266, 0.17878201036241992, 0.44098542724196665], \"yellow_goal\": [0.4492821494451232, -0.09470835378643591, 0.48104396111705233]}"
    },
    {
        "instruction": "Position the emerald colored block 15cm behind the banana colored block, then put the blood colored block into the cream colored mug, and finally stack the banana colored block on top of the ocean colored block.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44724832490477495, 0.014118190739009984, 0.2383682364148208], \"gripper_state\": \"open\", \"red_goal\": [0.7812668777899618, -0.15639542073824844, 0.4409854272419667], \"blue_goal\": [0.3789149637973661, 0.1829905587321063, 0.44097086473881375], \"green_goal\": [0.5549899021601798, -0.2391519879061734, 0.44098542724196665], \"yellow_goal\": [0.3879310472109132, 0.18127495426529408, 0.48104233843433725]}"
    },
    {
        "instruction": "Place the cherry colored block 20cm to the right of the sky colored block, then put the lemon colored block into the dark colored mug, and finally stack the ocean colored block on top of the lemon colored block.",
        "code": "```python\npri.grab('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, -0.2, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('blue_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([0, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.451203978744574, -0.013823778484450235, 0.2386972586671247], \"gripper_state\": \"open\", \"red_goal\": [0.388226507947242, -0.014201894178297461, 0.4409854272419661], \"blue_goal\": [0.4550846621330873, -0.08993567118408449, 0.4812914714615118], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44242957138486605, -0.09699788259451292, 0.44097087244311983]}"
    },
    {
        "instruction": "Move the grass colored block 10cm in front of the apple colored block, then place the butter colored block into the milk colored cup, and finally stack the emerald colored block on top of the ocean colored block.",
        "code": "```python\npri.grab('green_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ntarget_pos = blue_pos + np.array([0, 0, 0.1])\npri.move(target_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475091379570461, 0.014010303035281535, 0.23853990785614837], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37901434656400745, 0.18297861340512822, 0.44097086336638697], \"green_goal\": [0.38541298993084816, 0.18555879118695945, 0.4809534806663929], \"yellow_goal\": [0.7676781715447687, -0.1435465755323747, 0.44098542724196665]}"
    },
    {
        "instruction": "Position the grass colored block 25cm behind the banana colored block, then put the cherry colored block into the milk colored mug, and finally stack the lemon colored block on top of the blood colored block.",
        "code": "```python\npri.grab('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ntarget_pos = yellow_pos + np.array([-0.25, 0, 0.1])\npri.move(target_pos, yellow_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ntarget_pos = red_pos + np.array([0, 0, 0.1])\npri.move(target_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45671646422428797, -0.004403151676945147, 0.23721104893549522], \"gripper_state\": \"open\", \"red_goal\": [0.777999508800131, -0.15372781732363894, 0.4409708604220036], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4518348070424973, -0.23528549696356155, 0.44098552786682366], \"yellow_goal\": [0.7812864935167493, -0.15733353323739144, 0.4809499813282102]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the red cube then place it on the black mug",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(red_pos-blue_pos),'green_block':np.linalg.norm(red_pos-green_pos),'yellow_block':np.linalg.norm(red_pos-yellow_pos)}\ncloest_obj = min(distances,key=distances.get)\npri.grab(cloest_obj)\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the block which is the farthest from the yellow cube then place it on the black mug",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(yellow_pos-blue_pos),'green_block':np.linalg.norm(yellow_pos-green_pos),'red_block':np.linalg.norm(yellow_pos-red_pos)}\nfarthest_obj = max(distances,key=distances.get)\npri.grab(farthest_obj)\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the banana colored block then place it on the white mug",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(yellow_pos-blue_pos),'green_block':np.linalg.norm(yellow_pos-green_pos),'red_block':np.linalg.norm(yellow_pos-red_pos)}\ncloest_obj = min(distances,key=distances.get)\npri.grab(cloest_obj)\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4571292637530059, -0.004483129932589993, 0.23759134184405467], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691426789370281, -0.14629278490032951, 0.44097864546837223], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the block which is the cloest to the grass colored block and then place it on the milk colored mug",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(green_pos-blue_pos),'red_block':np.linalg.norm(green_pos-red_pos),'yellow_block':np.linalg.norm(green_pos-yellow_pos)}\ncloest_obj = min(distances,key=distances.get)\npri.grab(cloest_obj)\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565463046304906, -0.0043856474719165236, 0.23751298208542787], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684495090903805, -0.144381448635487, 0.44098542610867963]}"
    },
    {
        "instruction": "Pick up the blood colored block then put it on the middle of the blue bolck and green block",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nmid_pos = (blue_pos+green_pos)/2\nmid_pos[2] += 0.1\npri.grab('red_block')\npri.move(mid_pos, red_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4562530752892785, -0.000143030040500441, 0.2364731839715452], \"gripper_state\": \"open\", \"red_goal\": [0.5184417533261423, 0.008486087470904234, 0.4409854273686998], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the sky colored cube then put it on the middle of the red cube and green cube",
        "code": "```python\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\nred_pos, red_quat = pri.get_obj_pose('red_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nmid_pos = (red_pos+green_pos)/2\nmid_pos[2] += 0.1\npri.grab('blue_block')\npri.move(mid_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4607189112885174, 0.0007723039053339602, 0.23727202776626627], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6002421565151886, 0.030804864450397568, 0.44137854305186125], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the green block and then put it on the middle of the blue cube and green cube",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(green_pos-blue_pos),'red_block':np.linalg.norm(green_pos-red_pos),'yellow_block':np.linalg.norm(green_pos-yellow_pos)}\ncloest_obj = min(distances,key=distances.get)\nmid_pos = (blue_pos+green_pos)/2\nmid_pos[2] += 0.1\npri.grab(cloest_obj)\npri.move(mid_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4578453688986985, 0.000127572973538978, 0.2363329866137291], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5096372564296325, 0.008400924693331806, 0.44110401486698625]}"
    },
    {
        "instruction": "pick up the block which is the second farthest to the red block and then put it on the middle of the blue cube and banana colored cube",
        "code": "```python\nred_pos, red_quat = pri.get_obj_pose('red_block')\nblue_pos, blue_quat = pri.get_obj_pose('blue_block')\ngreen_pos, green_quat = pri.get_obj_pose('green_block')\nyellow_pos, yellow_quat = pri.get_obj_pose('yellow_block')\ndistances={'blue_block':np.linalg.norm(red_pos-blue_pos),'green_block':np.linalg.norm(red_pos-green_pos),'yellow_block':np.linalg.norm(red_pos-yellow_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nsecond_farthest_obj = sorted_distances[-2][0]\nmid_pos = (blue_pos+yellow_pos)/2\nmid_pos[2] += 0.1\npri.grab(second_farthest_obj)\npri.move(mid_pos, blue_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4586729242430148, -0.004567241836038183, 0.23663396724446123], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5416812544509958, -0.026785295196390425, 0.4409854142749502], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the gripper 10cm above the object which is far away from your current position and are using to drink water.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.1])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7615328026017375, -0.14048859842297895, 0.21282538385914335], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 10cm above the object which is close from your current position and are using to drink coffee.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4420626977998025, -0.08428047127550069, 0.21264832026283215], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 15cm over the cup that is darker than the other.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4450600670698487, -0.08742346400556489, 0.2585488841260603], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724691236], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724691236], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724691236], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724691236]}"
    },
    {
        "instruction": "Move the gripper 0.15m over the mug that appears lighter",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7611491326896205, -0.14023991348681647, 0.26091597128027705], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724218615], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724218615], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724218615], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724218615]}"
    },
    {
        "instruction": "Move the gripper 0.1m above the mug that has the most amount of light reflection.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.1])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7615328026017375, -0.14048859842297895, 0.21282538385914335], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 0.1m above the mug that has the least amount of light reflection.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.4420626977998025, -0.08428047127550069, 0.21264832026283215], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 10cm left to the cup with the color of the night.",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.1, 0])\npri.move(target_pos, black_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.44230316579825235, 0.0013393676245854796, 0.12478671065191488], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542725045603], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542725045603], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542725045603], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542725045603]}"
    },
    {
        "instruction": "Move the gripper 0.2m left to the cup with the color of snow.",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.2, 0])\npri.move(target_pos, white_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7622045587314378, 0.05364003871311971, 0.11571400319717301], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272420773], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272420773], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272420773], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272420773]}"
    },
    {
        "instruction": "Move the gripper 5 cm to the top of the block that has the three-corners.",
        "code": "```python\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.05])\npri.move(target_pos, triangle_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6465225806344219, -0.16706245974774384, 0.1843903177756045], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 15cm over the block that has the 360°-interior angle.",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.15])\npri.move(target_pos, square_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.5375030998732299, 0.21108002514401694, 0.2793652815248953], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272430848], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272430848], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272430848], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272430848]}"
    },
    {
        "instruction": "Move the gripper 10cm over the block that has the six-corners.",
        "code": "```python\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7028591963887582, -0.23302227866179576, 0.23271390946203102], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.440985427242063], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.440985427242063], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.440985427242063], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.440985427242063]}"
    },
    {
        "instruction": "Move the gripper 20 cm over the block that has the constant-radius shape.",
        "code": "```python\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.2])\npri.move(target_pos, circle_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.38647180410508597, 0.1769377919990148, 0.329193908507242], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272423448], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272423448], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272423448], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272423448]}"
    },
    {
        "instruction": "Position the gripper 15cm to the right of the block that has the no-corner.",
        "code": "```python\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.15, 0])\npri.move(target_pos, circle_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.3835527427732872, 0.029728942320444318, 0.13563743332270523], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272444834], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272444834], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272444834], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272444834]}"
    },
    {
        "instruction": "Move the gripper 10cm in front of the block that has the four-corners.",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0.1, 0, 0])\npri.move(target_pos, square_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6352962432716601, 0.21736542320872257, 0.13689083954179532], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724218615], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724218615], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724218615], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724218615]}"
    },
    {
        "instruction": "Position the gripper 5cm in front of the block that has the smooth-contour.",
        "code": "```python\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0.05, 0, 0])\npri.move(target_pos, circle_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.43010130645781386, 0.17298231669496816, 0.13521614842123802], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.44098542724281975], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.44098542724281975], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.44098542724281975], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.44098542724281975]}"
    },
    {
        "instruction": "Move the gripper 10cm to the right of the block which has the four-equal-sides.",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0])\npri.move(target_pos, square_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.533309410891808, 0.11911840336057337, 0.13445329319659388], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272422967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272422967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272422967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272422967]}"
    },
    {
        "instruction": "Move the gripper 10cm behind the block that has the 720°-interior angle.",
        "code": "```python\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0])\npri.move(target_pos, hexagon_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6037333568628371, -0.23317988929160888, 0.13530090719271498], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272420773], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272420773], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272420773], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272420773]}"
    },
    {
        "instruction": "Move the gripper 23cm to the left of the block that has the most corners.",
        "code": "```python\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0.23, 0])\npri.move(target_pos, hexagon_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.69972085245152, -0.008840547444608837, 0.1362625823413131], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Move the gripper 16cm to the left of the block that has three-line-enclosed.",
        "code": "```python\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.16, 0])\npri.move(target_pos, triangle_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.6441493032022192, -0.011754844989403395, 0.13720291281327196], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272422967], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272422967], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272422967], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272422967]}"
    },
    {
        "instruction": "Move the gripper 5cm behind the block that has the 180°-interior angle.",
        "code": "```python\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.05, 0, 0])\npri.move(target_pos, triangle_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.5953012594904123, -0.16567283550732326, 0.13422087321017045], \"gripper_state\": \"initial\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272421337], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272421337], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272421337], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272421337]}"
    },
    {
        "instruction": "Lift the block that has the 90°-per-corner.",
        "code": "```python\npri.grab('square_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45143219083126607, 0.004652338181221901, 0.23682335166592877], \"gripper_state\": \"close\", \"red_goal\": [0.45316591387006055, 0.003494669364067275, 0.540437477400962], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the block that has the six-corners.",
        "code": "```python\npri.grab('hexagon_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733622747093793, -0.0012051758012625704, 0.23679611105739568], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4491211269233193, 0.00011945647171429514, 0.5421375515061467]}"
    },
    {
        "instruction": "Grab the block that has the three-corners.",
        "code": "```python\npri.grab('triangle_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4488432907650911, -0.002928527171073245, 0.23688278489605658], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4490898191296773, -0.0027194415734193753, 0.5414068813292887], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Lift the block that has the smooth-contour.",
        "code": "```python\npri.grab('circle_block')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44787084274120265, 0.012571767240441468, 0.2377720659783768], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4571003532626198, 0.011463574249673203, 0.5446455014279481], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "please grab the block which is the cloest to the square block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(square_pos-circle_pos),'triangle_block':np.linalg.norm(square_pos-triangle_pos),'hexagon_block':np.linalg.norm(square_pos-hexagon_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\ncloest_obj = sorted_distances[0][0]\npri.grab(cloest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44806078318485004, 0.01247961654702593, 0.23790365726758983], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4556939476476844, 0.01095486971490743, 0.543703917403993], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "pick up the block that is the cloest to the hexagon block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(hexagon_pos-circle_pos),'triangle_block':np.linalg.norm(hexagon_pos-triangle_pos),'square_block':np.linalg.norm(hexagon_pos-square_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\ncloest_obj = sorted_distances[0][0]\npri.grab(cloest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4488432907650911, -0.002928527171073245, 0.23688278489605658], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4490898191296773, -0.0027194415734193753, 0.5414068813292887], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "pick up the block that is the farthest from the circle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'square_block':np.linalg.norm(circle_pos-square_pos),'triangle_block':np.linalg.norm(circle_pos-triangle_pos),'hexagon_block':np.linalg.norm(circle_pos-hexagon_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nfarthest_obj = sorted_distances[-1][0]\npri.grab(farthest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733622747093793, -0.0012051758012625704, 0.23679611105739568], \"gripper_state\": \"close\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4491211269233193, 0.00011945647171429514, 0.5421375515061467]}"
    },
    {
        "instruction": "grab the block that is the second farthest from the triangle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'square_block':np.linalg.norm(triangle_pos-square_pos),'circle_block':np.linalg.norm(triangle_pos-circle_pos),'hexagon_block':np.linalg.norm(triangle_pos-hexagon_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nsecond_farthest_obj = sorted_distances[-2][0]\npri.grab(second_farthest_obj)\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45097377502853747, 0.0041045913023726645, 0.23685652255310446], \"gripper_state\": \"close\", \"red_goal\": [0.45295983306590903, 0.0030333655147168574, 0.5400097572045462], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the circle block and position it 10cm right to the square block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4541851959477599, 0.005602153015832553, 0.23712282802405066], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.545704698339761, 0.1307255688918476, 0.4413656790655994], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the circle block and position it 10cm left to the white mug.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4582478298718905, -0.0029069303627722596, 0.2369513060635286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7775035220512176, -0.05250788603812295, 0.4414003988938382], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the circle block and place it 0.15m behind the hexagon block.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530577855651444, -0.008504898729508294, 0.237256794144374], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.568148316554303, -0.2292889213104673, 0.4409862763235546], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the circle block and place it 10cm in front of the black mug.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4580228841644996, -0.008510243409695936, 0.23678509830654187], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5540456829324969, -0.09512872515270801, 0.4412547234144763], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and position it 12cm right to the circle block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.12, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44221523867491935, 0.007624315917720798, 0.23831697348019915], \"gripper_state\": \"open\", \"red_goal\": [0.38737350807672777, 0.06548118013278975, 0.44098542620921033], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and position it 15cm left to the white mug.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45882385271619824, -0.0019704852668827374, 0.23701731668025133], \"gripper_state\": \"open\", \"red_goal\": [0.7751008468799995, 0.0013365709995763573, 0.44103511411561663], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the square block and place it 0.15m behind the hexagon block.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530453397092132, -0.008528434917943261, 0.2372565427112227], \"gripper_state\": \"open\", \"red_goal\": [0.5650458336132599, -0.23373906991893423, 0.44098542721109724], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the square block and place it 14cm in front of the black mug.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.14, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568649876645915, -0.006110497254078279, 0.23630179538138768], \"gripper_state\": \"open\", \"red_goal\": [0.5936395251380387, -0.09351252127954207, 0.44098526513249353], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the triangle block and position it 8cm right to the square block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.08, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45391631890064754, 0.006540503505227399, 0.23669170089807084], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5381022359973557, 0.1442660503840682, 0.44098542315211464], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the triangle block and position it 13cm left to the white mug.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.13, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4588036241707173, -0.0024795745213143155, 0.2369500790266033], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.77062456242006, -0.02134185837114475, 0.44098520162034177], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the triangle block and place it 0.17m behind the hexagon block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.17, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4520675587865677, -0.009011946657670581, 0.23714958573454453], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5344568870421456, -0.23681210116948082, 0.44098542749785946], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the triangle block and place it 20cm in front of the black mug.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4583126737855171, -0.005732010047102875, 0.2364575443488604], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6384465253147598, -0.10022044025479047, 0.44098542732759805], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the hexagon block and position it 10cm right to the square block.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45337627041935585, 0.005330634123270536, 0.23683651361842367], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5406292161566374, 0.1255475411398638, 0.44098419671465966]}"
    },
    {
        "instruction": "Pick up the hexagon block and position it 13cm right to the white mug.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, -0.13, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.455593967222583, -0.005578879419758199, 0.23689482781628984], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768064543314668, -0.27829034837502176, 0.4409877677994305]}"
    },
    {
        "instruction": "Grab the hexagon block and place it 0.12m behind the triangle block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.12, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45225280976407545, -0.008097497600361919, 0.2368272281527753], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.52771370456791, -0.1737817958782708, 0.4410228294162118]}"
    },
    {
        "instruction": "Grab the hexagon block and place it 18cm right to the black mug.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, -0.18, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4511875863971866, -0.011597036683968175, 0.23672135287185053], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.43748426272401525, -0.274348203255731, 0.4409784367143282]}"
    },
    {
        "instruction": "Grab the square block and place it on the circle block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475350249118585, 0.014014629264900675, 0.23855558278476435], \"gripper_state\": \"open\", \"red_goal\": [0.38430545284421447, 0.18188441870167082, 0.48094034817558523], \"blue_goal\": [0.3790447628879655, 0.18308911006395806, 0.4409708602719784], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the triangle block and stack it on top of the circle block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4476921587685429, 0.013182704427861874, 0.2386042739961977], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3789182464329545, 0.1830983772424934, 0.44097086695731563], \"green_goal\": [0.3801657481304738, 0.17945946814944408, 0.4809498837179775], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the hexagon block on top of the circle block.",
        "code": "```python\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473366713768422, 0.014108666627017744, 0.23842903314035974], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37891443828393534, 0.1829891847523431, 0.44097086478298836], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.3878310114304674, 0.18159525701023133, 0.4810500927026747]}"
    },
    {
        "instruction": "Grab the circle block and place it on the square block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45533450140288106, 0.010030094372466491, 0.23705213396712438], \"gripper_state\": \"open\", \"red_goal\": [0.5372580096972291, 0.22535388524325584, 0.4409708658771622], \"blue_goal\": [0.5437381012119822, 0.22877360204593447, 0.48128144984617843], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the triangle block and stack it on top of the square block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4540413738544121, 0.008591705635417096, 0.23664270598850073], \"gripper_state\": \"open\", \"red_goal\": [0.5372631907013925, 0.22534934135143955, 0.44097086038115146], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5399922600855577, 0.22525651820969098, 0.4809506323888379], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the hexagon block on top of the square block.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45347401056896475, 0.007894605071192837, 0.23682180416409332], \"gripper_state\": \"open\", \"red_goal\": [0.5371917418825746, 0.2252358467153457, 0.4409708525915374], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.542684001123611, 0.22650852281457023, 0.48100259153233077]}"
    },
    {
        "instruction": "Grab the circle block and place it on the triangle block.",
        "code": "```python\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4553658996371863, -0.00607983225192331, 0.23710275572051814], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6605508503060972, -0.18221774168060734, 0.48130893050655466], \"green_goal\": [0.6493249318282263, -0.1719865480490623, 0.4409708660978287], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and stack it on top of the triangle block.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4553525213691295, -0.006077078765511133, 0.23708518384170557], \"gripper_state\": \"open\", \"red_goal\": [0.6586239041955286, -0.1810499306918204, 0.48096948518023014], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493221281901856, -0.1719862680900978, 0.44097086398114865], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the hexagon block on top of the triangle block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45481164761147136, -0.0057820152202279615, 0.23702102555247268], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493335261763593, -0.17199149155762258, 0.4409708603679063], \"yellow_goal\": [0.6497910571714807, -0.17172938025224999, 0.48096356129586826]}"
    },
    {
        "instruction": "Grab the circle block and place it on the hexagon block.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45583559574863175, -0.005420687410587863, 0.23728201465035964], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7194132276277881, -0.2272253843147505, 0.48101158640985064], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040604104647498, -0.23978566171635263, 0.4409708659310942]}"
    },
    {
        "instruction": "Pick up the triangle block and stack it on top of the hexagon block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45525477524959124, -0.005474313004967202, 0.23735334840590144], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7103776220097523, -0.23923205157434216, 0.48093890699219444], \"yellow_goal\": [0.7040830534137764, -0.23963867578499734, 0.4409708606647589]}"
    },
    {
        "instruction": "Stack the square block on top of the hexagon block.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558350084085929, -0.005419180051453322, 0.23728197265697853], \"gripper_state\": \"open\", \"red_goal\": [0.716512583642191, -0.23053889690654722, 0.4809301103878022], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040800708914972, -0.23975454944943225, 0.4409708614582812]}"
    },
    {
        "instruction": "Please put the circle block on the square block first, and then put the triangle block on the circle block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45447070219064084, 0.008776336359883766, 0.23832635779490402], \"gripper_state\": \"open\", \"red_goal\": [0.5372813605648542, 0.22536616915726412, 0.440956309005069], \"blue_goal\": [0.5440286079856921, 0.22888893921048875, 0.4809092011437959], \"green_goal\": [0.5527348335141836, 0.23210445687694148, 0.5208811158409705], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the triangle block on the square block, then stack the hexagon block on top.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45470780120142773, 0.00980585267397801, 0.2381830340448417], \"gripper_state\": \"open\", \"red_goal\": [0.5372847591444291, 0.22536048176216902, 0.4409563099322267], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5400648797502571, 0.22528346200866067, 0.4809079164675333], \"yellow_goal\": [0.5405466574129097, 0.22496571273097296, 0.5208989400773165]}"
    },
    {
        "instruction": "Stack the hexagon and circle blocks on top of the square block in order.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4539369636852605, 0.007964730173337611, 0.238382095942885], \"gripper_state\": \"open\", \"red_goal\": [0.5371839364666232, 0.22522651638581603, 0.44095630167219524], \"blue_goal\": [0.5517793142749366, 0.23213406866138023, 0.5212835612832807], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5426463544133123, 0.22647584713933477, 0.4809155906275501]}"
    },
    {
        "instruction": "Please put the square block on the circle block first, and then put the triangle block on the square block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44501691446776603, 0.011758732379340473, 0.23920021624883175], \"gripper_state\": \"open\", \"red_goal\": [0.38434190087651965, 0.1818656784923701, 0.48089299868639324], \"blue_goal\": [0.379051289009148, 0.18308361696988903, 0.4409563059532703], \"green_goal\": [0.3848808038430012, 0.17935202352575633, 0.5208778074518589], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the triangle block on the circle block, then stack the hexagon block on top.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44533450657027474, 0.010351076602069489, 0.23937323104470715], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37894773685233313, 0.18310111066575646, 0.4409563094257935], \"green_goal\": [0.3801524322664894, 0.1793785784110476, 0.4809346079547192], \"yellow_goal\": [0.3867752430319977, 0.17692023908120516, 0.5208917829628226]}"
    },
    {
        "instruction": "Stack the hexagon and square blocks on top of the circle block in order.",
        "code": "```python\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44520110467879, 0.012185018838506095, 0.23940214384697162], \"gripper_state\": \"open\", \"red_goal\": [0.40131255542108474, 0.17882526946391789, 0.5208609292921975], \"blue_goal\": [0.3789203299473706, 0.18297988106173782, 0.44095630931716595], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.38773605743008843, 0.18154891288319083, 0.4809160011304795]}"
    },
    {
        "instruction": "Please put the circle block on the triangle block first, and then put the square block on the circle block.",
        "code": "```python\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45567237180028103, -0.006232467379487268, 0.23784972556079426], \"gripper_state\": \"open\", \"red_goal\": [0.6744181040238516, -0.19260619503500814, 0.5211038806104926], \"blue_goal\": [0.6608489302008057, -0.18243352302185142, 0.48086391618201346], \"green_goal\": [0.6493416641954443, -0.17200522066771654, 0.440956316367672], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the square block on the triangle block, then stack the hexagon block on top.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.455478038366435, -0.006030181704265364, 0.23788008677930178], \"gripper_state\": \"open\", \"red_goal\": [0.6572925788617945, -0.17983691933718565, 0.4808791222053708], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6491794457860653, -0.17175860750571526, 0.4409563093997197], \"yellow_goal\": [0.6586377553294628, -0.18319851164420892, 0.5208561821663322]}"
    },
    {
        "instruction": "Stack the hexagon and circle blocks on top of the triangle block in order.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4556379792762327, -0.006226589598087229, 0.23793047173461196], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6624493796840523, -0.18156387220225265, 0.5212401282150722], \"green_goal\": [0.6493289789920883, -0.17199260658399168, 0.4409563103589825], \"yellow_goal\": [0.6497687457963287, -0.17173964335551295, 0.48094185193350014]}"
    },
    {
        "instruction": "Please put the circle block on the hexagon block first, and then put the square block on the circle block.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45651465964681237, -0.0054961631493231815, 0.23788453769480994], \"gripper_state\": \"open\", \"red_goal\": [0.7357913540367891, -0.21636496183494897, 0.5209165115630698], \"blue_goal\": [0.7195380096020549, -0.22710895342309712, 0.4808157927407183], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.704083130318529, -0.23976565765837737, 0.4409563228383565]}"
    },
    {
        "instruction": "Place the square block on the hexagon block, then stack the triangle block on top.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558469551142573, -0.005463380795295339, 0.2379001392795292], \"gripper_state\": \"open\", \"red_goal\": [0.716502271981959, -0.2305514308979881, 0.4808834599904895], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7243972687678962, -0.22837419800657022, 0.5209521845940713], \"yellow_goal\": [0.7040746678733314, -0.23976161507064286, 0.4409563142749391]}"
    },
    {
        "instruction": "Stack the triangle and circle blocks on top of the hexagon block in order.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45574987690610685, -0.005704550827269386, 0.237913925439103], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.727054370539563, -0.22871920198537912, 0.5211399529934143], \"green_goal\": [0.710395249878631, -0.23925453260941365, 0.48089393137742936], \"yellow_goal\": [0.7040784672852488, -0.23965218204578612, 0.4409563121934449]}"
    },
    {
        "instruction": "Please put the square block on the circle block first, then put the triangle block on the square block, and finally to put the hexagon block on the triangle block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44554136860334853, 0.010023805802307554, 0.24172805375293188], \"gripper_state\": \"open\", \"red_goal\": [0.3844194128149056, 0.18185349572534396, 0.48084433540345994], \"blue_goal\": [0.3790623866090988, 0.1830809448124881, 0.44094177443742194], \"green_goal\": [0.3849848300052852, 0.17922551809383053, 0.5208218131076402], \"yellow_goal\": [0.39666380704083726, 0.18006849316425486, 0.5607690962135986]}"
    },
    {
        "instruction": "Place the triangle block on the circle block, then place the hexagon block on the triangle block, and finally to stack the square block on top.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44582894301630777, 0.009443289015707443, 0.24139074931122212], \"gripper_state\": \"open\", \"red_goal\": [0.39749100517175845, 0.1763480172650048, 0.5611124712063237], \"blue_goal\": [0.3789312015998874, 0.18310126792670361, 0.44094177722173994], \"green_goal\": [0.380097513445835, 0.17939041399825584, 0.4809121595519586], \"yellow_goal\": [0.3867083381396941, 0.17699051002455368, 0.5208572287871096]}"
    },
    {
        "instruction": "Stack the hexagon, square and triangle blocks on top of the circle block in order.",
        "code": "```python\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4465119080168657, 0.010093751880113511, 0.24125699711185938], \"gripper_state\": \"open\", \"red_goal\": [0.4017540633892726, 0.17882692469188652, 0.5206626913021793], \"blue_goal\": [0.37893222939914023, 0.18297798782255445, 0.4409418045150554], \"green_goal\": [0.41201303425001856, 0.18426043113671503, 0.560555913247932], \"yellow_goal\": [0.38791070329348515, 0.18153337701890904, 0.4808221216329919]}"
    },
    {
        "instruction": "Please put the hexagon block on the square block first, then put the circle block on the hexagon block, and finally to put the triangle block on the circle block.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45497852318351256, 0.008930828344013268, 0.2397614434452166], \"gripper_state\": \"open\", \"red_goal\": [0.537204883556402, 0.22523558038087638, 0.44094178145276225], \"blue_goal\": [0.5523112075349793, 0.2323857951847192, 0.5208127422240421], \"green_goal\": [0.5629294342642583, 0.23717766029867707, 0.5607726874368009], \"yellow_goal\": [0.542766862894797, 0.22653338919243554, 0.4808784481314646]}"
    },
    {
        "instruction": "Place the circle block on the square block, then place the triangle block on the circle block, and finally to stack the hexagon block on top.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4539256847842284, 0.007590128269772606, 0.23926485498647393], \"gripper_state\": \"open\", \"red_goal\": [0.537300853270258, 0.22537081181698337, 0.44094179774809766], \"blue_goal\": [0.5441670842917937, 0.22893029067110054, 0.4808694796063055], \"green_goal\": [0.5530384793337096, 0.2322075261170927, 0.5207730937948691], \"yellow_goal\": [0.5579098583504697, 0.23178623423498057, 0.5607333322975349]}"
    },
    {
        "instruction": "Stack the triangle, hexagon and circle blocks on top of the square block in order.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4551855758468292, 0.009922833615153647, 0.2402311148729957], \"gripper_state\": \"open\", \"red_goal\": [0.5372719741983731, 0.22535334613849078, 0.44094177225424935], \"blue_goal\": [0.5528582727501733, 0.22516110791983557, 0.5615403455806915], \"green_goal\": [0.5400162728959034, 0.22525451765896445, 0.48091142416338134], \"yellow_goal\": [0.5405222759021031, 0.22483823532962877, 0.520896618340759]}"
    },
    {
        "instruction": "Please put the hexagon block on the triangle block first, then put the square block on the hexagon block, and finally to put the circle block on the square block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4578766446651454, -0.007194866847244658, 0.239136167017915], \"gripper_state\": \"open\", \"red_goal\": [0.661968450242101, -0.18139236540106654, 0.5208274458133145], \"blue_goal\": [0.6761991399736224, -0.18889964195305023, 0.561172582916626], \"green_goal\": [0.6493411756977264, -0.1720058403754092, 0.4409417844266359], \"yellow_goal\": [0.6498279991202542, -0.17179372836006854, 0.4809190581939214]}"
    },
    {
        "instruction": "Place the square block on the triangle block, then place the hexagon block on the square block, and finally to stack the circle block on top.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45715074842229136, -0.006910616070975748, 0.23899027746561446], \"gripper_state\": \"open\", \"red_goal\": [0.6573189019760797, -0.17990254682390258, 0.48083347668393167], \"blue_goal\": [0.671765966568532, -0.19191238170871866, 0.5611062340105799], \"green_goal\": [0.6491794288039444, -0.17176576351503958, 0.44094179013118145], \"yellow_goal\": [0.6586800876106612, -0.18332860581067284, 0.520794884961986]}"
    },
    {
        "instruction": "Stack the circle, hexagon and square blocks on top of the triangle block in order.",
        "code": "```python\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4564933079833904, -0.006433045059396571, 0.2388698205327638], \"gripper_state\": \"open\", \"red_goal\": [0.6713938274344449, -0.18877976446502384, 0.5611456128924681], \"blue_goal\": [0.6576176176244726, -0.17896828023527145, 0.4808997046901098], \"green_goal\": [0.6490718485728187, -0.17158201325668732, 0.44094178600507], \"yellow_goal\": [0.6576523287478033, -0.17956735852352662, 0.5208843858906761]}"
    },
    {
        "instruction": "Please put the triangle block on the hexagon block first, then put the square block on the triangle block, and finally to put the circle block on the square block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4560986354581388, -0.005437589889319236, 0.2384770645523862], \"gripper_state\": \"open\", \"red_goal\": [0.7284321988572225, -0.22695683516107212, 0.5205641298761102], \"blue_goal\": [0.7454331850230846, -0.21720319957841572, 0.5608076658473075], \"green_goal\": [0.7106029549685918, -0.23911896670943936, 0.48083494032035845], \"yellow_goal\": [0.7041066727999512, -0.2396319482266351, 0.44094181915867237]}"
    },
    {
        "instruction": "Place the square block on the hexagon block, then place the triangle block on the square block, and finally to stack the circle block on top.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45660834839297043, -0.005709015570944841, 0.23850269852737832], \"gripper_state\": \"open\", \"red_goal\": [0.7167976514868886, -0.2303409053355501, 0.4807684065120521], \"blue_goal\": [0.7435055624140953, -0.2192080582521465, 0.5608664854551991], \"green_goal\": [0.7250311216340835, -0.2279315143281808, 0.5206265111160788], \"yellow_goal\": [0.704101898638365, -0.23974533068039589, 0.4409418284042488]}"
    },
    {
        "instruction": "Stack the circle, triangle and square blocks on top of the hexagon block in order.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45662181963842174, -0.005616461815453222, 0.23850837835251598], \"gripper_state\": \"open\", \"red_goal\": [0.7477619777616781, -0.21227725614524376, 0.560457313100879], \"blue_goal\": [0.7203291431656862, -0.2262953450657769, 0.4807084816586814], \"green_goal\": [0.7291432947891581, -0.22108016932745583, 0.5203265562042867], \"yellow_goal\": [0.7040988934218263, -0.23975847937901423, 0.440941826854291]}"
    },
    {
        "instruction": "Place the circle block in the black cup.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and place it on the black mug.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473911090043061, -0.013597761772209598, 0.23986061092085026], \"gripper_state\": \"open\", \"red_goal\": [0.4520656589091759, -0.09686027566498318, 0.44098542662586493], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the triangle block and place it on the black mug.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473973806459677, -0.014196522688154172, 0.23997910144964757], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4421959372477968, -0.09614438217563534, 0.4409852633130375], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please put the hexagon block into the balck mug.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44752332611744816, -0.01213623089849384, 0.23965504111720776], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44189921250125963, -0.09822577176723968, 0.44106476570180503]}"
    },
    {
        "instruction": "Place the circle block in the white cup.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45656951002887625, -0.004353680443126485, 0.23752380378691257], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7787252985793175, -0.1555373461552459, 0.44148282416372575], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and place it on the white mug.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45656202535350043, -0.00436594002623938, 0.237516870636806], \"gripper_state\": \"open\", \"red_goal\": [0.7770124308464101, -0.15317701509527737, 0.44112181199138606], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the triangle block and place it on the white mug.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4571292637530059, -0.004483129932589993, 0.23759134184405467], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691426789370281, -0.14629278490032951, 0.44097864546837223], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please put the hexagon block into the white mug.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565463046304906, -0.0043856474719165236, 0.23751298208542787], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684495090903805, -0.144381448635487, 0.44098542610867963]}"
    },
    {
        "instruction": "Please put the circle block on the black cup first, and then put the square block on the circle block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4508014059557709, -0.013197871476443215, 0.23700398804184125], \"gripper_state\": \"open\", \"red_goal\": [0.46593553234876905, -0.09297520441809076, 0.4809360793458645], \"blue_goal\": [0.45722366828205524, -0.09650921932529946, 0.4409708599349679], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and place it on the black mug first, then stack the triangle block on top of the square block.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4503773344023712, -0.015237777658361946, 0.2370253068337363], \"gripper_state\": \"open\", \"red_goal\": [0.45194948539587726, -0.0968716772126787, 0.440970862275089], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4531460703517144, -0.09400291454612193, 0.48096075108822783], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the triangle block and place it on the black mug first, then put the circle block on top of the triangle block.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45134300963729346, -0.0173064415101037, 0.23846926317247025], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45761615688004176, -0.09510600734906188, 0.4812426473218345], \"green_goal\": [0.4421773638860784, -0.09615410151437241, 0.44097086793287005], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the hexagon block on the black mug, then place the circle block on the hexagon block.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4511509012087731, -0.013365575126697043, 0.23874249983511836], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.4547722965210681, -0.09306517380821194, 0.48128768697404434], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4419563181395366, -0.09827865486317151, 0.44097087188413775]}"
    },
    {
        "instruction": "Please put the circle block on the white cup first, and then put the hexagon block on the circle block.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567624928906344, -0.004493027736191237, 0.2372893914420286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7791059134016005, -0.15575955687231263, 0.4409708608400164], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7811678296165228, -0.15854686176721142, 0.4809503630659025]}"
    },
    {
        "instruction": "Pick up the square block and place it on the white mug first, then stack the triangle block on top of the square block.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45668344900244295, -0.004358645083703529, 0.23718183746079063], \"gripper_state\": \"open\", \"red_goal\": [0.7770914510304893, -0.15314196984746334, 0.4409708665714363], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.782627069162612, -0.15647398118421446, 0.4810107935242998], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the triangle block and place it on the white mug first, then put the hexagon block on top of the triangle block.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4563340880824042, -0.004327269401546276, 0.23718924585976203], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691484272023125, -0.14627950491493938, 0.44097086078383585], \"yellow_goal\": [0.7719280060749901, -0.14879208665546106, 0.48096038182293005]}"
    },
    {
        "instruction": "Place the hexagon block on the white mug, then place the circle block on the hexagon block.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568609433760348, -0.004339154348602992, 0.2372022753165956], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7820438463528573, -0.15289903406702582, 0.48137995100612124], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684468675177623, -0.14438101438685103, 0.4409708660200239]}"
    },
    {
        "instruction": "Please put the circle block on the black cup first, then put the square block on the circle block, and finally to put the triangle block on the square block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44994510628672346, -0.012264272383175871, 0.2407936872802094], \"gripper_state\": \"open\", \"red_goal\": [0.46595806868002937, -0.0929532210005953, 0.4808861800839105], \"blue_goal\": [0.45722562005104783, -0.09650140167861317, 0.4409563062059545], \"green_goal\": [0.46534564501906645, -0.09102523409545808, 0.5208779030606996], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the square block and place it on the black mug first, then stack the triangle block on top of the square block, and finally to stack the hexagon block on top of the triangle block.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4486780288165423, -0.01276184788178718, 0.24101117325979943], \"gripper_state\": \"open\", \"red_goal\": [0.45196335003918725, -0.09685271720117353, 0.44095631276186115], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.45320507700703005, -0.09397263802977644, 0.4809166669555495], \"yellow_goal\": [0.45463550566167293, -0.0936327354501132, 0.52095639681573]}"
    },
    {
        "instruction": "Grab the triangle block and place it on the black mug first, then put the circle block on top of the triangle block, and finally to put the hexagon block on top of the circle block.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4492640284084967, -0.013457099263330259, 0.2411196587107723], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45817019624412475, -0.09508966658717569, 0.48086517558952846], \"green_goal\": [0.44221111983413475, -0.09614573408802224, 0.4409563163543119], \"yellow_goal\": [0.4599346064494022, -0.09447000790918708, 0.5208363335503229]}"
    },
    {
        "instruction": "Place the hexagon block on the black mug, then place the circle block on the hexagon block, and finally to place the square block on the circle block.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44923308611918517, -0.012642977115606694, 0.24124402866519817], \"gripper_state\": \"open\", \"red_goal\": [0.466933726046686, -0.09198865046631458, 0.5208372852230327], \"blue_goal\": [0.4550461336539154, -0.09304509130863775, 0.4808750700836314], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44198128351474175, -0.09829732888254149, 0.44095630794694823]}"
    },
    {
        "instruction": "Please put the circle block on the white cup first, then put the hexagon block on the circle block, and finally to put the triangle block on the hexagon block.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565553204015095, -0.004394102890667655, 0.23769544145578209], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7791048446256316, -0.15576926050662684, 0.4409563110666815], \"green_goal\": [0.7902442706153379, -0.1629986696697642, 0.521104951249349], \"yellow_goal\": [0.7811342946993424, -0.15854731784322612, 0.48091600074422397]}"
    },
    {
        "instruction": "Pick up the square block and place it on the white mug first, then stack the triangle block on top of the square block, and finally to stack the hexagon block on top of the triangle block.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565890411210329, -0.004459315122263288, 0.23763390097465314], \"gripper_state\": \"open\", \"red_goal\": [0.7771076162474115, -0.1531484101126919, 0.44095630618668075], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7826411755797837, -0.15646274711764158, 0.4809123675340369], \"yellow_goal\": [0.7849962844848218, -0.15861450901602642, 0.5208979037548147]}"
    },
    {
        "instruction": "Grab the triangle block and place it on the white mug first, then put the hexagon block on top of the triangle block, and finally to put the circle block on top of the hexagon block.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45730974020667053, -0.004526899240347623, 0.2377296679070417], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7854584193325174, -0.15709038394327635, 0.5213131548551354], \"green_goal\": [0.7691482626609596, -0.14628927153270532, 0.4409563012593312], \"yellow_goal\": [0.7719225298881565, -0.14880892048866698, 0.4809363011206946]}"
    },
    {
        "instruction": "Place the hexagon block on the white mug, then place the circle block on the hexagon block, and finally to place the square block on the circle block.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45773807181707776, -0.0045858001054675974, 0.23774618942550169], \"gripper_state\": \"open\", \"red_goal\": [0.7968298756759546, -0.16247536831020354, 0.5212215626023957], \"blue_goal\": [0.7824417070495511, -0.15310488338145953, 0.480864398531306], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684614427992273, -0.1443976725602295, 0.44095632098551263]}"
    },
    {
        "instruction": "First to put the circle block on the black mug, then stack the square, triangle and hexagon blocks on top of the circle block in order, and finally to move the gripper 10cm over the triangle block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46437001356115915, -0.08988672580233047, 0.31027664246071124], \"gripper_state\": \"open\", \"red_goal\": [0.466034782347675, -0.09299179700235043, 0.48087757600481534], \"blue_goal\": [0.45724642897146567, -0.09651341649813816, 0.44094181154024253], \"green_goal\": [0.46544580893599863, -0.0911061687012149, 0.5208652608188532], \"yellow_goal\": [0.4656116178034197, -0.0864666843430499, 0.5610727049872227]}"
    },
    {
        "instruction": "Place the square block on the black mug, then place the hexagon block on the square block, then place the circle block on the hexagon block, then to place the triangle block on the circle block, and finally to move the gripper 10cm over the circle block.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46653176408679453, -0.08422712779457979, 0.31037304364386603], \"gripper_state\": \"open\", \"red_goal\": [0.4535899084019871, -0.09480234998263594, 0.440941782185444], \"blue_goal\": [0.4674597264117418, -0.08465053386502072, 0.52080709952594], \"green_goal\": [0.47048774276119537, -0.0810598426452472, 0.5607643777457973], \"yellow_goal\": [0.45402879348829345, -0.09281544021867072, 0.4809151313664442]}"
    },
    {
        "instruction": "First to put the hexagon block on the white mug, then stack the square, triangle and circle blocks on top of the hexagon block in order.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45683124679129583, -0.0043853884640540275, 0.23804870213483925], \"gripper_state\": \"open\", \"red_goal\": [0.7821914822123035, -0.15452687393097386, 0.4807833077412484], \"blue_goal\": [0.8071031870693554, -0.16971916335109416, 0.5610046735324346], \"green_goal\": [0.7921192541883234, -0.1593711219253185, 0.5205725219773757], \"yellow_goal\": [0.7687890872594466, -0.14476130709661325, 0.4409418273681911]}"
    },
    {
        "instruction": "Place the square block on the white mug, then place the hexagon block on the square block, then place the circle block on the hexagon block, and finally to place the triangle block on the circle block.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574699277030688, -0.004600896716447368, 0.2381604393573033], \"gripper_state\": \"open\", \"red_goal\": [0.777072818472296, -0.15326507191077088, 0.44094178869362316], \"blue_goal\": [0.791647484781448, -0.16546284706523698, 0.5208166261377857], \"green_goal\": [0.8028841482226026, -0.1687056985161293, 0.5610884940165209], \"yellow_goal\": [0.7791338180451995, -0.15649209412904047, 0.48090930056119513]}"
    },
    {
        "instruction": "Move the no-corner block 10cm to the right of the four-corners block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45419490299300747, 0.005620434483279305, 0.23714679509116282], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.545409517090355, 0.13117068840840718, 0.4413021042078148], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the constant-radius shape block 10cm behind the six-corners block.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.454390988219317, -0.007582468901269112, 0.23727489260153484], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6187292299260286, -0.22904761033109744, 0.44102440163221124], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the smooth-contour block 10cm in front of the mug of the 'Night' color.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4580228841644996, -0.008510243409695936, 0.23678509830654187], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5540456829324969, -0.09512872515270801, 0.4412547234144763], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 360°-interior angle block 10cm to the left of the 180°-interior angle block.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45653678665279085, -0.004037343483015739, 0.23716188991896742], \"gripper_state\": \"open\", \"red_goal\": [0.6572182729012368, -0.07783102679453992, 0.44102405450207194], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the four-equal-sides block 10cm behind the most corners block.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4543835838391591, -0.00759420835916327, 0.23727448402701606], \"gripper_state\": \"open\", \"red_goal\": [0.6152685385139434, -0.23258889306056835, 0.4409853323409152], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 90°-per-corner block 10cm to the left of the mug of the 'Snow' color.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4576447650104416, -0.00285287806563798, 0.23697265179959465], \"gripper_state\": \"open\", \"red_goal\": [0.7756522519170892, -0.050972613937747234, 0.4410410176782026], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the three-line-enclosed block 15cm to the right of the four-corners block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45458584465785556, 0.003834926562583876, 0.2366668666905581], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5376408782262663, 0.07780991553617507, 0.44098542526104134], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the three-corners block 10cm behind the six-corners block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45385627101061976, -0.007511524192629284, 0.23730098366461166], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6105309156171589, -0.23904024686418038, 0.4409854235114678], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the three-line-enclosed block 10cm to the left of the mug of the 'Shady' color.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44482247557449067, 8.137697816929315e-06, 0.22131386798323932], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.43822637971162165, -0.0018042968149216668, 0.4409828013321142], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the 720°-interior angle block 15cm to the left of the 180°-interior angle block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4572477343179283, -0.0025112559916626812, 0.23712417042110218], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6499894154663287, -0.02619697757137846, 0.44098541159912463]}"
    },
    {
        "instruction": "Move the most corners block 10cm to the right of the four-equal-sides block.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45337627041935585, 0.005330634123270536, 0.23683651361842367], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5406292161566374, 0.1255475411398638, 0.44098419671465966]}"
    },
    {
        "instruction": "Move the six-corners block 18cm in front of the mug with the 'Night' color.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.18, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45725850898873965, -0.004286987366976814, 0.23660849953088686], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6207489158532374, -0.09779456441742063, 0.4410015302638265]}"
    },
    {
        "instruction": "Stake the no-corner block on top of the four-corners block, then pile the three-line-enclosed block on top of the 720°-interior angle block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4557315136644094, -0.005669320688295969, 0.23735913765717703], \"gripper_state\": \"open\", \"red_goal\": [0.5372723412449595, 0.22535947344173982, 0.44097086020698856], \"blue_goal\": [0.5439799669059961, 0.22885739553086376, 0.4809489144506785], \"green_goal\": [0.7103377177874762, -0.2395748716568677, 0.4809404123369285], \"yellow_goal\": [0.7040827144437165, -0.23963708668188374, 0.4409708587289267]}"
    },
    {
        "instruction": "Stake the 90°-per-corner block on top of the most corners block, then pile the three-corners block on top of the four-corners block.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558469551142573, -0.005463380795295339, 0.2379001392795292], \"gripper_state\": \"open\", \"red_goal\": [0.716502271981959, -0.2305514308979881, 0.4808834599904895], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7243972687678962, -0.22837419800657022, 0.5209521845940713], \"yellow_goal\": [0.7040746678733314, -0.23976161507064286, 0.4409563142749391]}"
    },
    {
        "instruction": "Stake the 90°-per-corner block on top of the three-line-enclosed block, then pile the smooth-contour block on top of the four-equal-sides block.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4555918448935053, -0.006201204626835665, 0.23786915535755843], \"gripper_state\": \"open\", \"red_goal\": [0.6585886527944955, -0.18107189908281635, 0.48088087547989683], \"blue_goal\": [0.670427478200478, -0.1914106093115768, 0.5211427125315509], \"green_goal\": [0.6493341914325417, -0.17200338949134664, 0.4409563084578866], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stake the four-corners block on top of the three-corners block, then pile the six-corners block on top of the four-corners block, and finally to put the no-corner block on the topest.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\n\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45715074842229136, -0.006910616070975748, 0.23899027746561446], \"gripper_state\": \"open\", \"red_goal\": [0.6573189019760797, -0.17990254682390258, 0.48083347668393167], \"blue_goal\": [0.671765966568532, -0.19191238170871866, 0.5611062340105799], \"green_goal\": [0.6491794288039444, -0.17176576351503958, 0.44094179013118145], \"yellow_goal\": [0.6586800876106612, -0.18332860581067284, 0.520794884961986]}"
    },
    {
        "instruction": "Place the 180°-interior angle blocks into the black mug.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473973806459677, -0.014196522688154172, 0.23997910144964757], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4421959372477968, -0.09614438217563534, 0.4409852633130375], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the 360°-interior angle block and place it in the dark colored mug.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473911090043061, -0.013597761772209598, 0.23986061092085026], \"gripper_state\": \"open\", \"red_goal\": [0.4520656589091759, -0.09686027566498318, 0.44098542662586493], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the six-corners block and place it in the milk colored cup.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565463046304906, -0.0043856474719165236, 0.23751298208542787], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684495090903805, -0.144381448635487, 0.44098542610867963]}"
    },
    {
        "instruction": "Pick up the constant-radius shape block and put it on the milk colored mug.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45656951002887625, -0.004353680443126485, 0.23752380378691257], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7787252985793175, -0.1555373461552459, 0.44148282416372575], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the smooth-contour block in the snow colored cups, and then stack the hexagon block on top of the smooth-contour block.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567624928906344, -0.004493027736191237, 0.2372893914420286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7791059134016005, -0.15575955687231263, 0.4409708608400164], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7811678296165228, -0.15854686176721142, 0.4809503630659025]}"
    },
    {
        "instruction": "Grab the three-line-enclosed block and place it on the milk colored cup, then stack the six-corners block on top of the three-line-enclosed block.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4563340880824042, -0.004327269401546276, 0.23718924585976203], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691484272023125, -0.14627950491493938, 0.44097086078383585], \"yellow_goal\": [0.7719280060749901, -0.14879208665546106, 0.48096038182293005]}"
    },
    {
        "instruction": "Stack the four-corners, no-corner, and three-corners blocks into the night colored mug in turn.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4500822537308507, -0.012215490317476489, 0.24077534429871555], \"gripper_state\": \"open\", \"red_goal\": [0.4521431498544622, -0.09699382673203476, 0.4409563138794121], \"blue_goal\": [0.4676919774927069, -0.09136463020869885, 0.4808476190841924], \"green_goal\": [0.46770698019106105, -0.08913418863325873, 0.5208376027364007], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the 720°-interior angle, 180°-interior angle, and 360°-interior angle blocks into the milk colored mug in turn.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45681689222076005, -0.004440526658061532, 0.23765449014698087], \"gripper_state\": \"open\", \"red_goal\": [0.7878433694818481, -0.15998994721860862, 0.521219612433454], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7746299917263164, -0.1480539805352648, 0.48091190943158396], \"yellow_goal\": [0.7685344395161979, -0.14435224302588534, 0.4409563114996926]}"
    },
    {
        "instruction": "Stack the six-corners, four-equal-sides, smooth-contour and three-corners blocks into the milk colored mug in turn.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4576340712351715, -0.004515301747127391, 0.23814044749591762], \"gripper_state\": \"open\", \"red_goal\": [0.7821416286529852, -0.15395173817026664, 0.48082110738837625], \"blue_goal\": [0.7984694759864568, -0.1621057839842223, 0.5203416789300807], \"green_goal\": [0.8087381046034603, -0.16403084904998905, 0.5607590407159089], \"yellow_goal\": [0.7685301240093783, -0.14448080994207682, 0.44094182941072657]}"
    },
    {
        "instruction": "Stack the 360°-interior angle, six-corners, no-corner, and 180°-interior angle blocks into the cream colored mug in turn.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574699277030688, -0.004600896716447368, 0.2381604393573033], \"gripper_state\": \"open\", \"red_goal\": [0.777072818472296, -0.15326507191077088, 0.44094178869362316], \"blue_goal\": [0.791647484781448, -0.16546284706523698, 0.5208166261377857], \"green_goal\": [0.8028841482226026, -0.1687056985161293, 0.5610884940165209], \"yellow_goal\": [0.7791338180451995, -0.15649209412904047, 0.48090930056119513]}"
    },
    {
        "instruction": "Move the block with the four-equal-sides 15cm to the left of the triangle block and then stack the hexagon block on top of the circle block.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475751547626359, 0.014056005659700093, 0.23856254445674713], \"gripper_state\": \"open\", \"red_goal\": [0.6570749526308295, -0.030016842836600076, 0.44098542724196665], \"blue_goal\": [0.3789542815243221, 0.18298339800742874, 0.4409708643551448], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.388212032665536, 0.1840770867779608, 0.48109340059281497]}"
    },
    {
        "instruction": "Please position the block with the six-corners 20cm behind the black mug, and then stack the triangle block on top of the circle block.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([-0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4476520415136627, 0.013240267333776224, 0.23855575507828802], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3789211627872444, 0.18308889411212897, 0.4409708612047668], \"green_goal\": [0.3826245722932382, 0.18087333544466935, 0.4809438491687286], \"yellow_goal\": [0.23643226118441465, -0.09454974987319563, 0.44098542724196665]}"
    },
    {
        "instruction": "Position the block with the most corners 15cm behind the triangle block, then stack the square block on top of the circle block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4474481633413157, 0.014815106639028807, 0.2385238011864314], \"gripper_state\": \"open\", \"red_goal\": [0.38290672755829763, 0.18445484245776456, 0.48096005743297837], \"blue_goal\": [0.3789756302574076, 0.18315904546516845, 0.4409708604510571], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.497329880177295, -0.1736155305593033, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the block with the three-line-enclosed 20cm in front of the black mug and then stack the hexagon block on top of the square block.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.454068081379616, 0.00882938923963359, 0.2366093179482946], \"gripper_state\": \"open\", \"red_goal\": [0.5371772135452061, 0.22524790707873196, 0.4409708673780837], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6384460013905081, -0.10021980640188954, 0.44098542724196665], \"yellow_goal\": [0.541894268120257, 0.22349669831884655, 0.48098199491276045]}"
    },
    {
        "instruction": "Position the triangle block 15cm behind the mug of the 'shady' color, then stack the square block on top of the circle block.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475573476044742, 0.013945399142979199, 0.23856479255959767], \"gripper_state\": \"open\", \"red_goal\": [0.3835202021898947, 0.18220559319922747, 0.4809503364724533], \"blue_goal\": [0.3790505034201251, 0.18308796541999137, 0.4409708602894919], \"green_goal\": [0.2924548220277663, -0.09781473210862038, 0.4409854272419666], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the block with the constant-radius shape and place it 15cm right to the square block, then stack the hexagon block on top of the triangle block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.454823093619185, -0.005777822912789356, 0.2370324842080141], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5465028633216432, 0.08225127099597179, 0.4409854272419667], \"green_goal\": [0.6493332328105877, -0.17199340522050224, 0.4409708602571514], \"yellow_goal\": [0.6499673661991303, -0.17268177448558109, 0.48096346992037964]}"
    },
    {
        "instruction": "Grab the block with the 720°-interior angle and place it 12cm left to the black mug, then stack the circle block on top of the square block.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.12, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45582464427309416, 0.01070242482241016, 0.23711208381213217], \"gripper_state\": \"open\", \"red_goal\": [0.5373977120404915, 0.22538287709961277, 0.44097086831667176], \"blue_goal\": [0.5426039115886105, 0.22892037829115425, 0.4811042040698682], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.4410059761473437, 0.022822921829117573, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the block with the four-equal-sides 15cm in front of the black mug and then stack the triangle block on top of the circle block.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.15, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44769838820176167, 0.013145957035220973, 0.2386137974835823], \"gripper_state\": \"open\", \"red_goal\": [0.604605582280142, -0.09525419026101567, 0.44098542724196665], \"blue_goal\": [0.37886003748622943, 0.18308315121899932, 0.4409708656913312], \"green_goal\": [0.3801288361891045, 0.18014058889177936, 0.48095012887371286], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Take the block with the three-line-enclosed and put it 15cm left to the black mug, then stack the square block on top of the circle block.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44743096848908975, 0.014071938434182092, 0.23849116281634392], \"gripper_state\": \"open\", \"red_goal\": [0.3848067808352212, 0.1810553778363445, 0.4809470273641208], \"blue_goal\": [0.37904420594792254, 0.18309186577445039, 0.4409708628737947], \"green_goal\": [0.4430278355208677, 0.05169393019656283, 0.44098542724196665], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the blocks with the most corners on top of the square block, then place the triangle block 15cm in front of the cup with the color associated with the 'night'.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.15, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4570339724256967, -0.006792526238427172, 0.2361516774840316], \"gripper_state\": \"open\", \"red_goal\": [0.5371840307180785, 0.22522538979846032, 0.44097086018354587], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5879405669728079, -0.10017981205621436, 0.4409854245567876], \"yellow_goal\": [0.5426725664843733, 0.22648528651167438, 0.48095987919318467]}"
    },
    {
        "instruction": "Stack the blocks with the no-corner on top of the blocks with the three-corners, then place the hexagon block 15cm right to the cup with the color associated with the 'night'.",
        "code": "```python\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45162894711188717, -0.012024285799672199, 0.23675841877566567], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6576263544027834, -0.17882638403394943, 0.48094615206405494], \"green_goal\": [0.6490649098672002, -0.17156678008852458, 0.440970860285776], \"yellow_goal\": [0.4365771703711522, -0.2446506434532771, 0.44097537098810313]}"
    },
    {
        "instruction": "Please place the block with the 90°-per-corner 10cm to the left of the block with the 180°-interior angle, and then place the block with the no-corner into the black cup.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4480040098878125, -0.015044785734666204, 0.24055467018097104], \"gripper_state\": \"open\", \"red_goal\": [0.6571784519827475, -0.07779225120589028, 0.4409854272419667], \"blue_goal\": [0.4560487088571922, -0.09534302491486353, 0.44132125281688195], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the block with the smooth-contour 10cm in front of the cup with the night color, then place the block with the 720°-interior angle into the cup with the milk color.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565418132666768, -0.00439247045546088, 0.23751662965924675], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5541900227819522, -0.09500330967853693, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7686671100420834, -0.14458415819040454, 0.4409854264525845]}"
    },
    {
        "instruction": "Place the three-corners block 10cm in front of the four-corners block, then place the most corners block in the night colored mug.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.447605781910194, -0.011945188246324954, 0.23977427548272362], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6471251559315191, 0.23040890820990748, 0.44098542724196665], \"yellow_goal\": [0.4386067593188936, -0.09805260574331344, 0.44114057116876365]}"
    },
    {
        "instruction": "Place the 720°-interior angle block in the milk colored mug, then place the four-corners block 10cm behind the 180°-interior angle block.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530327243779526, -0.007603696344076038, 0.2369752209836708], \"gripper_state\": \"open\", \"red_goal\": [0.5601151051046989, -0.18251412864872274, 0.4412213168719099], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768452055176101, -0.1443818878372627, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the 360°-interior angle block 10cm in front of the constant-radius shape block, then place thes six-corners block 10cm to the right of the four-equal-sides block, and finally place the three-corners block on the milk mug.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565734652303457, -0.004353187399074958, 0.23752634963183666], \"gripper_state\": \"open\", \"red_goal\": [0.48473105909798175, 0.18383419037894996, 0.44098542724196665], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7692910502653793, -0.14638176353864826, 0.44097973270281343], \"yellow_goal\": [0.488143675540064, 0.0852103596024316, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the constant-radius shape block 10cm to the right of the four-corners block, then place the six-corners block 10cm to behind the 90°-per-corner block, and finally place the three-corners block on the milk mug.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45714014399329966, -0.004474959060239911, 0.23762411881075057], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5456458050900981, 0.1312710683803587, 0.44098542724196665], \"green_goal\": [0.7687780306678241, -0.14668810172309724, 0.44098300782562305], \"yellow_goal\": [0.445786999488224, 0.2279128787319958, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the most corners block 10cm to the right of the three-corners block, then place the 360°-interior angle block 10cm to behind the 720°-interior angle block, and finally place the no-corner block on the night mug.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44807327973999694, -0.014804822955445229, 0.2405702518855632], \"gripper_state\": \"open\", \"red_goal\": [0.5681047025153599, -0.28743822866087543, 0.4409879569422143], \"blue_goal\": [0.45731264867974375, -0.09382473273187296, 0.44125334520551346], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6503217782214945, -0.2748220681698004, 0.4409876905428412]}"
    },
    {
        "instruction": "Place the three-line-enclosed block 10cm to the right of the four-corners block, then place the six-corners block 10cm to behind the three-line-enclosed block, and finally place the smooth-contour block on the night mug.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44797984120057976, -0.015234279754874566, 0.24053262656118995], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45386085550454563, -0.09685719002259975, 0.44158434922539214], \"green_goal\": [0.5375750363434184, 0.12391384929137106, 0.44098542724196665], \"yellow_goal\": [0.44249078321788804, 0.12312289286073715, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the constant-radius shape block into the night colored cup, and then put the four-corners block into the milk cup.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565299082291649, -0.004401758884205064, 0.23753346006681703], \"gripper_state\": \"open\", \"red_goal\": [0.7769424085667864, -0.15643989809508266, 0.4411432478236699], \"blue_goal\": [0.45721574547184013, -0.09651284368503224, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Put the most corners block into the milk colored mug, and then put the three-corners block into the night colored mug.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44728338537954915, -0.01484513395812164, 0.24009042390342455], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4453728982625195, -0.09562622402682393, 0.44098542708018146], \"yellow_goal\": [0.7684520556111127, -0.14438188803465316, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the 180°-interior angle block into the cream colored mug, then put the 360°-interior angle block into the night colored mug, and finally stack the no-corner block onto the three-corners block.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568823282305961, -0.004441641175002412, 0.23717324640111564], \"gripper_state\": \"open\", \"red_goal\": [0.4534333499553278, -0.095982193667656, 0.44098542724196665], \"blue_goal\": [0.7821326656627524, -0.15811642510142268, 0.4814097888242255], \"green_goal\": [0.7691490887163527, -0.14634037196715602, 0.44097086567382854], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Put the 720°-interior angle block into the cream colored mug, then put the four-corners block into the night colored mug, and finally stack the 180°-interior angle block onto the four-equal-sides block.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45043459949980713, -0.014687365242502262, 0.23702047473262894], \"gripper_state\": \"open\", \"red_goal\": [0.452481746361996, -0.09418797335584393, 0.4409708619022098], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4536756716961335, -0.09170037005699318, 0.4809621951613414], \"yellow_goal\": [0.768452055196776, -0.1443818878399032, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the three-corners block into the milk colored mug, then put the constant-radius shape block into the night colored mug, then stack the most corners block onto the constant-radius shape block, and finally stack the four-corners block onto the three-line-enclosed block.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\":[0.45632592047809345,-0.004335687984486601,0.23721858230440335],\"gripper_state\":\"open\",\"red_goal\":[0.7799352817162585,-0.155036976510611,0.4810310244059187],\"blue_goal\":[0.4559889615577288,-0.09569119811000965,0.44097086015812054],\"green_goal\":[0.7691832685367092,-0.14636169647646838,0.44097086610206576],\"yellow_goal\":[0.4565269030015592,-0.09383902341715324,0.48096313344238206]}"
    },
    {
        "instruction": "Put the no-corner block into the night colored mug, then stack the 90°-per-corner block onto the no-corner block, then put the three-line-enclosed block into the milk colored mug, and finally stack the 720°-interior angle block onto the three-line-enclosed block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45633480351310335, -0.004264044077598728, 0.23746998719696405], \"gripper_state\": \"open\", \"red_goal\": [0.4659426377016968, -0.0929742502934342, 0.48093587898260637], \"blue_goal\": [0.45722242053170686, -0.09651104769025677, 0.4409708602352164], \"green_goal\": [0.7690316905316618, -0.1474238796948938, 0.4409708612185838], \"yellow_goal\": [0.7706020359112147, -0.1497584265104371, 0.4809508223578768]}"
    },
    {
        "instruction": "Place the constant-radius shape, three-corners, and four-equal-sides block into the milk colored mug in order, and then place the six-corners block into the night colored mug.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473885154108059, -0.012847337873570114, 0.23970307457987122], \"gripper_state\": \"open\", \"red_goal\": [0.7980784939620162, -0.17071621408801962, 0.5208063352267512], \"blue_goal\": [0.7791149902352486, -0.15578201838889763, 0.44095631160186716], \"green_goal\": [0.7839692810812927, -0.15915729819247515, 0.48090148104564473], \"yellow_goal\": [0.44237403769688444, -0.09640180562675436, 0.44102528962928883]}"
    },
    {
        "instruction": "Place the most corners, 180°-interior angle, and smooth-contour block into the milk colored mug in order, and then place the four-equal-sides block into the night colored mug.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733153392316366, -0.013465010255945545, 0.23981358429523864], \"gripper_state\": \"open\", \"red_goal\": [0.452362502338917, -0.09467016789914709, 0.4409854250741986], \"blue_goal\": [0.7879560940779837, -0.15999331453790386, 0.5207770071828444], \"green_goal\": [0.7747409225530487, -0.14812157124879424, 0.4809037501905159], \"yellow_goal\": [0.7685458436923285, -0.14435904377855624, 0.44095631253268797]}"
    },
    {
        "instruction": "Please place the most corners, three-corners, four-equal-sides, and constant-radius shape block into the milk colored mug in order.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4573081581371782, -0.004549067849447662, 0.23813629280716214], \"gripper_state\": \"open\", \"red_goal\": [0.788576234226527, -0.16044652118454986, 0.5206480289297941], \"blue_goal\": [0.8035559391536219, -0.16895882109759044, 0.5610496689742769], \"green_goal\": [0.7748316267925716, -0.14819635175879523, 0.4808644892478449], \"yellow_goal\": [0.7685553920440187, -0.1443693892629996, 0.4409418022540296]}"
    },
    {
        "instruction": "Please place the constant-radius shape, 90°-per-corner, 720°-interior angle, and three-corners block into the night colored mug in order, and finally to move the gripper 10cm over the six-corners block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46572108424331904, -0.08763213062236165, 0.3108067474256226], \"gripper_state\": \"open\", \"red_goal\": [0.46602907797426923, -0.09290469660950107, 0.48083860365761627], \"blue_goal\": [0.45723484571973155, -0.09649900466203419, 0.4409417728246295], \"green_goal\": [0.4721442665562445, -0.08476134235202654, 0.560762681454389], \"yellow_goal\": [0.4658416240878653, -0.08783443288171212, 0.5207964294332131]}"
    },
    {
        "instruction": "Place the three-line-enclosed block 15cm to the right of the smooth-contour block, then put the 360°-interior angle block into the cream colored mug, and finally stack the six-corners block on top of the four-corners block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567307244461042, -0.004434697357399424, 0.2374255039403645], \"gripper_state\": \"open\", \"red_goal\": [0.7780838953760535, -0.15471867149474236, 0.44097086082929027], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.3806473709914283, 0.035272991786064314, 0.44098542724196665], \"yellow_goal\": [0.7791049259530545, -0.1575077000168044, 0.48096246436376594]}"
    },
    {
        "instruction": "Place the three-line-enclosed block 10cm to the left of the no-corner block, then put the 360°-interior angle block into the night cup, and finally stack the six-corners block on top of the four-corners block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4501471682074329, -0.014317578377097219, 0.23710608383582993], \"gripper_state\": \"open\", \"red_goal\": [0.45108064230203304, -0.09586496497638583, 0.4409708680348661], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.3832525692265185, 0.2815203183764661, 0.4409878530163192], \"yellow_goal\": [0.4477557531651573, -0.09391734488834631, 0.48108333533955994]}"
    },
    {
        "instruction": "Move the constant-radius shape block 20cm behind the three-corners block, then place the six-corners block into the milk colored mug, and finally stack the four-equal-sides block on top of the most corners block.",
        "code": "```python\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.2, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568386002352434, -0.0044323854991347965, 0.23733465250530733], \"gripper_state\": \"open\", \"red_goal\": [0.781189527579575, -0.15557571045327934, 0.4812814386392326], \"blue_goal\": [0.4600627134536022, -0.18096995659483714, 0.4409860805615068], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7682701185407839, -0.14591348979078037, 0.4409708661160747]}"
    },
    {
        "instruction": "Position the 180°-interior angle block 5cm in front of the four-equal-sides block, then put the six-corners block into the dark colored mug, and finally stack the smooth-contour block on top of the four-corners block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0.05, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4544229517645723, 0.008682753216723911, 0.2369257346856884], \"gripper_state\": \"open\", \"red_goal\": [0.5373529688526462, 0.2253792522025925, 0.4409708669973905], \"blue_goal\": [0.5442859606866157, 0.22766578635077603, 0.48141151446579133], \"green_goal\": [0.5920946678326918, 0.229075175511658, 0.44098542724196665], \"yellow_goal\": [0.4384996735153983, -0.09805652935955009, 0.44098542724196665]}"
    },
    {
        "instruction": "Move the 90°-per-corner block 5cm behind the no-corner block, then place the six-corners block into the cream colored mug, and finally stack the four-equal-sides block on top of the six-corners block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([-0.05, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574127307195409, -0.004511707763324718, 0.23721221994919034], \"gripper_state\": \"open\", \"red_goal\": [0.7831659864273465, -0.15534903828546082, 0.48142506846621597], \"blue_goal\": [0.38948021861647164, 0.18610681699017906, 0.44098542724205625], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768421684539995, -0.14457755882159667, 0.4409708658311653]}"
    },
    {
        "instruction": "Position the four-corners block 10cm behind the most corners block, then put the three-line-enclosed block into the milk colored mug, and finally stack the constant-radius shape block on top of the three-corners block.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568810280298454, -0.004410352019125672, 0.23720149346000158], \"gripper_state\": \"open\", \"red_goal\": [0.6152833758796108, -0.23257431701524334, 0.44098542724196665], \"blue_goal\": [0.7798263513766018, -0.15844036092643005, 0.4814939530203291], \"green_goal\": [0.7682010488409363, -0.14827080847052163, 0.4409708660027051], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the 720°-interior angle block 15cm to the left of the three-corners block, then put the 90°-per-corner block into the night colored mug, and finally stack the constant-radius shape block on top of the four-equal-sides block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4525631229006222, -0.01285212853706252, 0.23874038487323918], \"gripper_state\": \"open\", \"red_goal\": [0.45378853886947407, -0.09125386641278606, 0.44097087405050667], \"blue_goal\": [0.46858684429290853, -0.08595025671620767, 0.4812094301092815], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6499768868718201, -0.026191561564676374, 0.44098542724196665]}"
    },
    {
        "instruction": "Move the no-corner block 10cm behind the six-corners block, then place the four-corners block into the dark colored mug, and finally stack the three-corners block on top of the no-corner block.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45465984774078666, -0.007485086940518125, 0.2373067282594648], \"gripper_state\": \"open\", \"red_goal\": [0.4539036871812422, -0.09595099183743448, 0.44098542724196665], \"blue_goal\": [0.6177622584084329, -0.23002311750247612, 0.44097086147622744], \"green_goal\": [0.6224867519665548, -0.2315232220542965, 0.4809542474665716], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Position the six-corners block 10cm behind the 180°-interior angle block, then put the 90°-per-corner block into the cream colored mug, and finally stack the constant-radius shape block on top of the three-corners block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45491559911341367, -0.005815582870481178, 0.23708265125001987], \"gripper_state\": \"open\", \"red_goal\": [0.7801134635328808, -0.1574916349960036, 0.4409854272419667], \"blue_goal\": [0.6594168899374474, -0.18186920952452215, 0.48117575849148875], \"green_goal\": [0.6493582354010957, -0.17207098485467426, 0.4409708660451461], \"yellow_goal\": [0.5478406482263702, -0.1733493015041936, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the smooth-contour block 25cm to the right of the  four-corners block, then put the six-corners block into the milk cup, and finally stack the four-equal-sides block on top of the 720°-interior angle block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.25, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568478166445209, -0.004398319108727695, 0.2372316530795176], \"gripper_state\": \"open\", \"red_goal\": [0.7811811530882322, -0.153604303227823, 0.48129184783752854], \"blue_goal\": [0.5498681116704097, -0.01830451087033747, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684838958447557, -0.14459058839969022, 0.4409708660501213]}"
    },
    {
        "instruction": "Move the  three-corners block 8cm in front of the constant-radius shape block, then place the four-equal-sides block into the night colored mug, and finally stack the six-corners block on top of the 90°-per-corner block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0.08, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4501958294258189, -0.013670642523788917, 0.23714666843393556], \"gripper_state\": \"open\", \"red_goal\": [0.45188369824564006, -0.09658755024444061, 0.4409708671605415], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4592949793546266, 0.17878201036241992, 0.44098542724196665], \"yellow_goal\": [0.4492821494451232, -0.09470835378643591, 0.48104396111705233]}"
    },
    {
        "instruction": "Position the three-line-enclosed block 15cm behind the 720°-interior angle block, then put the 90°-per-corner block into the cream colored mug, and finally stack the 720°-interior angle block on top of the smooth-contour block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44724832490477495, 0.014118190739009984, 0.2383682364148208], \"gripper_state\": \"open\", \"red_goal\": [0.7812668777899618, -0.15639542073824844, 0.4409854272419667], \"blue_goal\": [0.3789149637973661, 0.1829905587321063, 0.44097086473881375], \"green_goal\": [0.5549899021601798, -0.2391519879061734, 0.44098542724196665], \"yellow_goal\": [0.3879310472109132, 0.18127495426529408, 0.48104233843433725]}"
    },
    {
        "instruction": "Place the 360°-interior angle block 20cm to the right of the no-corner block, then put the  six-corners block into the dark colored mug, and finally stack the constant-radius shape block on top of the six-corners block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.2, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.451203978744574, -0.013823778484450235, 0.2386972586671247], \"gripper_state\": \"open\", \"red_goal\": [0.388226507947242, -0.014201894178297461, 0.4409854272419661], \"blue_goal\": [0.4550846621330873, -0.08993567118408449, 0.4812914714615118], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44242957138486605, -0.09699788259451292, 0.44097087244311983]}"
    },
    {
        "instruction": "Move the three-corners block 10cm in front of the four-equal-sides block, then place the most corners block into the milk cup, and finally stack the three-line-enclosed block on top of the smooth-contour block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475091379570461, 0.014010303035281535, 0.23853990785614837], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37901434656400745, 0.18297861340512822, 0.44097086336638697], \"green_goal\": [0.38541298993084816, 0.18555879118695945, 0.4809534806663929], \"yellow_goal\": [0.7676781715447687, -0.1435465755323747, 0.44098542724196665]}"
    },
    {
        "instruction": "Position the 180°-interior angle block 25cm behind the 720°-interior angle block, then put the 90°-per-corner block into the milk colored mug, and finally stack the six-corners block on top of the 360°-interior angle block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.25, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45671646422428797, -0.004403151676945147, 0.23721104893549522], \"gripper_state\": \"open\", \"red_goal\": [0.777999508800131, -0.15372781732363894, 0.4409708604220036], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4518348070424973, -0.23528549696356155, 0.44098552786682366], \"yellow_goal\": [0.7812864935167493, -0.15733353323739144, 0.4809499813282102]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the 360°-interior angle block then place it on the black mug",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(square_pos-circle_pos),'triangle_block':np.linalg.norm(square_pos-triangle_pos),'hexagon_block':np.linalg.norm(square_pos-hexagon_pos)}\ncloest_obj = min(distances,key=distances.get)\npri.grab(cloest_obj)\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the block which is the farthest from the hexagon block then place it on the black mug",
        "code": "```python\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(hexagon_pos-circle_pos),'triangle_block':np.linalg.norm(hexagon_pos-triangle_pos),'square_block':np.linalg.norm(hexagon_pos-square_pos)}\nfarthest_obj = max(distances,key=distances.get)\npri.grab(farthest_obj)\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the most corners block then place it on the white mug",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(hexagon_pos-circle_pos),'triangle_block':np.linalg.norm(hexagon_pos-triangle_pos),'square_block':np.linalg.norm(hexagon_pos-square_pos)}\ncloest_obj = min(distances,key=distances.get)\npri.grab(cloest_obj)\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4571292637530059, -0.004483129932589993, 0.23759134184405467], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7691426789370281, -0.14629278490032951, 0.44097864546837223], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the block which is the cloest to the three-corners block and then place it on the milk colored mug",
        "code": "```python\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(triangle_pos-circle_pos),'square_block':np.linalg.norm(triangle_pos-square_pos),'hexagon_block':np.linalg.norm(triangle_pos-hexagon_pos)}\ncloest_obj = min(distances,key=distances.get)\npri.grab(cloest_obj)\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4565463046304906, -0.0043856474719165236, 0.23751298208542787], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684495090903805, -0.144381448635487, 0.44098542610867963]}"
    },
    {
        "instruction": "Pick up the four-corners block then put it on the middle of the circle block and triangle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nmid_pos = (circle_pos+triangle_pos)/2\nmid_pos[2] += 0.1\npri.grab('square_block')\npri.move(mid_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4562530752892785, -0.000143030040500441, 0.2364731839715452], \"gripper_state\": \"open\", \"red_goal\": [0.5184417533261423, 0.008486087470904234, 0.4409854273686998], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the smooth-contour block then put it on the middle of the square block and triangle block",
        "code": "```python\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nmid_pos = (square_pos+triangle_pos)/2\nmid_pos[2] += 0.1\npri.grab('circle_block')\npri.move(mid_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4607189112885174, 0.0007723039053339602, 0.23727202776626627], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6002421565151886, 0.030804864450397568, 0.44137854305186125], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the triangle block and then put it on the middle of the circle block and triangle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(triangle_pos-circle_pos),'square_block':np.linalg.norm(triangle_pos-square_pos),'hexagon_block':np.linalg.norm(triangle_pos-hexagon_pos)}\ncloest_obj = min(distances,key=distances.get)\nmid_pos = (circle_pos+triangle_pos)/2\nmid_pos[2] += 0.1\npri.grab(cloest_obj)\npri.move(mid_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4578453688986985, 0.000127572973538978, 0.2363329866137291], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5096372564296325, 0.008400924693331806, 0.44110401486698625]}"
    },
    {
        "instruction": "pick up the block which is the second farthest to the square block and then put it on the middle of the circle block and 720°-interior angle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(square_pos-circle_pos),'triangle_block':np.linalg.norm(square_pos-triangle_pos),'hexagon_block':np.linalg.norm(square_pos-hexagon_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nsecond_farthest_obj = sorted_distances[-2][0]\nmid_pos = (circle_pos+hexagon_pos)/2\nmid_pos[2] += 0.1\npri.grab(second_farthest_obj)\npri.move(mid_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4586729242430148, -0.004567241836038183, 0.23663396724446123], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5416812544509958, -0.026785295196390425, 0.4409854142749502], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blue block and position it 10cm right to the square block.",
        "code": "```python\npri.grab('blue_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4541851959477599, 0.005602153015832553, 0.23712282802405066], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.545704698339761, 0.1307255688918476, 0.4413656790655994], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blue block and position it 10cm left to the white mug.",
        "code": "```python\npri.grab('blue_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4582478298718905, -0.0029069303627722596, 0.2369513060635286], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7775035220512176, -0.05250788603812295, 0.4414003988938382], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the sky colored block and place it 0.15m behind the hexagon block.",
        "code": "```python\npri.grab('blue_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530577855651444, -0.008504898729508294, 0.237256794144374], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.568148316554303, -0.2292889213104673, 0.4409862763235546], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the blue block and place it 10cm in front of the black mug.",
        "code": "```python\npri.grab('blue_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4580228841644996, -0.008510243409695936, 0.23678509830654187], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.5540456829324969, -0.09512872515270801, 0.4412547234144763], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red block and position it 12cm right to the circle block.",
        "code": "```python\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.12, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44221523867491935, 0.007624315917720798, 0.23831697348019915], \"gripper_state\": \"open\", \"red_goal\": [0.38737350807672777, 0.06548118013278975, 0.44098542620921033], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blood colored block and position it 15cm left to the white mug.",
        "code": "```python\npri.grab('red_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45882385271619824, -0.0019704852668827374, 0.23701731668025133], \"gripper_state\": \"open\", \"red_goal\": [0.7751008468799995, 0.0013365709995763573, 0.44103511411561663], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the red block and place it 0.15m behind the hexagon block.",
        "code": "```python\npri.grab('red_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4530453397092132, -0.008528434917943261, 0.2372565427112227], \"gripper_state\": \"open\", \"red_goal\": [0.5650458336132599, -0.23373906991893423, 0.44098542721109724], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the red block and place it 14cm in front of the black mug.",
        "code": "```python\npri.grab('red_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.14, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568649876645915, -0.006110497254078279, 0.23630179538138768], \"gripper_state\": \"open\", \"red_goal\": [0.5936395251380387, -0.09351252127954207, 0.44098526513249353], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the grass colored block and position it 8cm right to the square block.",
        "code": "```python\npri.grab('green_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.08, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45391631890064754, 0.006540503505227399, 0.23669170089807084], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5381022359973557, 0.1442660503840682, 0.44098542315211464], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green block and position it 13cm left to the white mug.",
        "code": "```python\npri.grab('green_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0.13, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4588036241707173, -0.0024795745213143155, 0.2369500790266033], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.77062456242006, -0.02134185837114475, 0.44098520162034177], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it 0.17m behind the hexagon block.",
        "code": "```python\npri.grab('green_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.17, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4520675587865677, -0.009011946657670581, 0.23714958573454453], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5344568870421456, -0.23681210116948082, 0.44098542749785946], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the cucumber colored block and place it 20cm in front of the black mug.",
        "code": "```python\npri.grab('green_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.2, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4583126737855171, -0.005732010047102875, 0.2364575443488604], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6384465253147598, -0.10022044025479047, 0.44098542732759805], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the yellow block and position it 10cm right to the square block.",
        "code": "```python\npri.grab('yellow_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.1, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45337627041935585, 0.005330634123270536, 0.23683651361842367], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5406292161566374, 0.1255475411398638, 0.44098419671465966]}"
    },
    {
        "instruction": "Pick up the yellow block and position it 13cm right to the white mug.",
        "code": "```python\npri.grab('yellow_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, -0.13, 0.1])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.455593967222583, -0.005578879419758199, 0.23689482781628984], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768064543314668, -0.27829034837502176, 0.4409877677994305]}"
    },
    {
        "instruction": "Grab the butter colored block and place it 0.12m behind the triangle block.",
        "code": "```python\npri.grab('yellow_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.12, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45225280976407545, -0.008097497600361919, 0.2368272281527753], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.52771370456791, -0.1737817958782708, 0.4410228294162118]}"
    },
    {
        "instruction": "Grab the banana colored block and place it 18cm right to the black mug.",
        "code": "```python\npri.grab('yellow_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, -0.18, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4511875863971866, -0.011597036683968175, 0.23672135287185053], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.43748426272401525, -0.274348203255731, 0.4409784367143282]}"
    },
    {
        "instruction": "Grab the red block and place it on the circle block.",
        "code": "```python\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475350249118585, 0.014014629264900675, 0.23855558278476435], \"gripper_state\": \"open\", \"red_goal\": [0.38430545284421447, 0.18188441870167082, 0.48094034817558523], \"blue_goal\": [0.3790447628879655, 0.18308911006395806, 0.4409708602719784], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green block and stack it on top of the circle block.",
        "code": "```python\npri.grab('green_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4476921587685429, 0.013182704427861874, 0.2386042739961977], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3789182464329545, 0.1830983772424934, 0.44097086695731563], \"green_goal\": [0.3801657481304738, 0.17945946814944408, 0.4809498837179775], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the banana colored block on top of the circle block.",
        "code": "```python\npri.grab('yellow_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473366713768422, 0.014108666627017744, 0.23842903314035974], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37891443828393534, 0.1829891847523431, 0.44097086478298836], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.3878310114304674, 0.18159525701023133, 0.4810500927026747]}"
    },
    {
        "instruction": "Grab the red block and place it on the square block.",
        "code": "```python\npri.grab('red_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45533450140288106, 0.010030094372466491, 0.23705213396712438], \"gripper_state\": \"open\", \"red_goal\": [0.5372580096972291, 0.22535388524325584, 0.4409708658771622], \"blue_goal\": [0.5437381012119822, 0.22877360204593447, 0.48128144984617843], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the green block and stack it on top of the square block.",
        "code": "```python\npri.grab('green_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4540413738544121, 0.008591705635417096, 0.23664270598850073], \"gripper_state\": \"open\", \"red_goal\": [0.5372631907013925, 0.22534934135143955, 0.44097086038115146], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5399922600855577, 0.22525651820969098, 0.4809506323888379], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the yellow block on top of the square block.",
        "code": "```python\npri.grab('yellow_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45347401056896475, 0.007894605071192837, 0.23682180416409332], \"gripper_state\": \"open\", \"red_goal\": [0.5371917418825746, 0.2252358467153457, 0.4409708525915374], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.542684001123611, 0.22650852281457023, 0.48100259153233077]}"
    },
    {
        "instruction": "Grab the sea colored block and place it on the triangle block.",
        "code": "```python\npri.grab('blue_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4553658996371863, -0.00607983225192331, 0.23710275572051814], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6605508503060972, -0.18221774168060734, 0.48130893050655466], \"green_goal\": [0.6493249318282263, -0.1719865480490623, 0.4409708660978287], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the cherry colored block and stack it on top of the triangle block.",
        "code": "```python\npri.grab('red_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4553525213691295, -0.006077078765511133, 0.23708518384170557], \"gripper_state\": \"open\", \"red_goal\": [0.6586239041955286, -0.1810499306918204, 0.48096948518023014], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493221281901856, -0.1719862680900978, 0.44097086398114865], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Stack the yellow block on top of the triangle block.",
        "code": "```python\npri.grab('yellow_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45481164761147136, -0.0057820152202279615, 0.23702102555247268], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493335261763593, -0.17199149155762258, 0.4409708603679063], \"yellow_goal\": [0.6497910571714807, -0.17172938025224999, 0.48096356129586826]}"
    },
    {
        "instruction": "Grab the blue block and place it on the hexagon block.",
        "code": "```python\npri.grab('blue_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45583559574863175, -0.005420687410587863, 0.23728201465035964], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.7194132276277881, -0.2272253843147505, 0.48101158640985064], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040604104647498, -0.23978566171635263, 0.4409708659310942]}"
    },
    {
        "instruction": "Pick up the leaf colored block and stack it on top of the hexagon block.",
        "code": "```python\npri.grab('green_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45525477524959124, -0.005474313004967202, 0.23735334840590144], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7103776220097523, -0.23923205157434216, 0.48093890699219444], \"yellow_goal\": [0.7040830534137764, -0.23963867578499734, 0.4409708606647589]}"
    },
    {
        "instruction": "Stack the red block on top of the hexagon block.",
        "code": "```python\npri.grab('red_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558350084085929, -0.005419180051453322, 0.23728197265697853], \"gripper_state\": \"open\", \"red_goal\": [0.716512583642191, -0.23053889690654722, 0.4809301103878022], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040800708914972, -0.23975454944943225, 0.4409708614582812]}"
    },
    {
        "instruction": "Please put the blue block on the square block first, and then put the green block on the circle block.",
        "code": "```python\npri.grab('blue_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45447070219064084, 0.008776336359883766, 0.23832635779490402], \"gripper_state\": \"open\", \"red_goal\": [0.5372813605648542, 0.22536616915726412, 0.440956309005069], \"blue_goal\": [0.5440286079856921, 0.22888893921048875, 0.4809092011437959], \"green_goal\": [0.5527348335141836, 0.23210445687694148, 0.5208811158409705], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the green block on the square block, then stack the yellow block on top.",
        "code": "```python\npri.grab('green_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('yellow_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45470780120142773, 0.00980585267397801, 0.2381830340448417], \"gripper_state\": \"open\", \"red_goal\": [0.5372847591444291, 0.22536048176216902, 0.4409563099322267], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5400648797502571, 0.22528346200866067, 0.4809079164675333], \"yellow_goal\": [0.5405466574129097, 0.22496571273097296, 0.5208989400773165]}"
    },
    {
        "instruction": "Stack the yellow and circle blocks on top of the square block in order.",
        "code": "```python\npri.grab('yellow_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4539369636852605, 0.007964730173337611, 0.238382095942885], \"gripper_state\": \"open\", \"red_goal\": [0.5371839364666232, 0.22522651638581603, 0.44095630167219524], \"blue_goal\": [0.5517793142749366, 0.23213406866138023, 0.5212835612832807], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5426463544133123, 0.22647584713933477, 0.4809155906275501]}"
    },
    {
        "instruction": "Please put the blood colored block on the circle block first, and then put the triangle block on the square block.",
        "code": "```python\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44501691446776603, 0.011758732379340473, 0.23920021624883175], \"gripper_state\": \"open\", \"red_goal\": [0.38434190087651965, 0.1818656784923701, 0.48089299868639324], \"blue_goal\": [0.379051289009148, 0.18308361696988903, 0.4409563059532703], \"green_goal\": [0.3848808038430012, 0.17935202352575633, 0.5208778074518589], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the leaf colored block on the circle block, then stack the hexagon block on top.",
        "code": "```python\npri.grab('green_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44533450657027474, 0.010351076602069489, 0.23937323104470715], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37894773685233313, 0.18310111066575646, 0.4409563094257935], \"green_goal\": [0.3801524322664894, 0.1793785784110476, 0.4809346079547192], \"yellow_goal\": [0.3867752430319977, 0.17692023908120516, 0.5208917829628226]}"
    },
    {
        "instruction": "Stack the yellow and square blocks on top of the circle block in order.",
        "code": "```python\npri.grab('yellow_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44520110467879, 0.012185018838506095, 0.23940214384697162], \"gripper_state\": \"open\", \"red_goal\": [0.40131255542108474, 0.17882526946391789, 0.5208609292921975], \"blue_goal\": [0.3789203299473706, 0.18297988106173782, 0.44095630931716595], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.38773605743008843, 0.18154891288319083, 0.4809160011304795]}"
    },
    {
        "instruction": "Please put the sky colored block on the triangle block first, and then put the square block on the circle block.",
        "code": "```python\npri.grab('blue_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45567237180028103, -0.006232467379487268, 0.23784972556079426], \"gripper_state\": \"open\", \"red_goal\": [0.6744181040238516, -0.19260619503500814, 0.5211038806104926], \"blue_goal\": [0.6608489302008057, -0.18243352302185142, 0.48086391618201346], \"green_goal\": [0.6493416641954443, -0.17200522066771654, 0.440956316367672], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the red block on the triangle block, then stack the hexagon block on top.",
        "code": "```python\npri.grab('red_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.455478038366435, -0.006030181704265364, 0.23788008677930178], \"gripper_state\": \"open\", \"red_goal\": [0.6572925788617945, -0.17983691933718565, 0.4808791222053708], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6491794457860653, -0.17175860750571526, 0.4409563093997197], \"yellow_goal\": [0.6586377553294628, -0.18319851164420892, 0.5208561821663322]}"
    },
    {
        "instruction": "Stack the butter colored and circle blocks on top of the triangle block in order.",
        "code": "```python\npri.grab('yellow_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4556379792762327, -0.006226589598087229, 0.23793047173461196], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6624493796840523, -0.18156387220225265, 0.5212401282150722], \"green_goal\": [0.6493289789920883, -0.17199260658399168, 0.4409563103589825], \"yellow_goal\": [0.6497687457963287, -0.17173964335551295, 0.48094185193350014]}"
    },
    {
        "instruction": "Please put the blue block on the hexagon block first, and then put the red block on the circle block.",
        "code": "```python\npri.grab('blue_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45651465964681237, -0.0054961631493231815, 0.23788453769480994], \"gripper_state\": \"open\", \"red_goal\": [0.7357913540367891, -0.21636496183494897, 0.5209165115630698], \"blue_goal\": [0.7195380096020549, -0.22710895342309712, 0.4808157927407183], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.704083130318529, -0.23976565765837737, 0.4409563228383565]}"
    },
    {
        "instruction": "Place the red block on the hexagon block, then stack the green block on top.",
        "code": "```python\npri.grab('red_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('green_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4558469551142573, -0.005463380795295339, 0.2379001392795292], \"gripper_state\": \"open\", \"red_goal\": [0.716502271981959, -0.2305514308979881, 0.4808834599904895], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.7243972687678962, -0.22837419800657022, 0.5209521845940713], \"yellow_goal\": [0.7040746678733314, -0.23976161507064286, 0.4409563142749391]}"
    },
    {
        "instruction": "Stack the grass colored and circle blocks on top of the hexagon block in order.",
        "code": "```python\npri.grab('green_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45574987690610685, -0.005704550827269386, 0.237913925439103], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.727054370539563, -0.22871920198537912, 0.5211399529934143], \"green_goal\": [0.710395249878631, -0.23925453260941365, 0.48089393137742936], \"yellow_goal\": [0.7040784672852488, -0.23965218204578612, 0.4409563121934449]}"
    },
    {
        "instruction": "Please put the apple colored block on the circle block first, then put the triangle block on the square block, and finally to put the yellow block on the triangle block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44554136860334853, 0.010023805802307554, 0.24172805375293188], \"gripper_state\": \"open\", \"red_goal\": [0.3844194128149056, 0.18185349572534396, 0.48084433540345994], \"blue_goal\": [0.3790623866090988, 0.1830809448124881, 0.44094177443742194], \"green_goal\": [0.3849848300052852, 0.17922551809383053, 0.5208218131076402], \"yellow_goal\": [0.39666380704083726, 0.18006849316425486, 0.5607690962135986]}"
    },
    {
        "instruction": "Place the green block on the sky colored block, then place the hexagon block on the triangle block, and finally to stack the square block on top.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44582894301630777, 0.009443289015707443, 0.24139074931122212], \"gripper_state\": \"open\", \"red_goal\": [0.39749100517175845, 0.1763480172650048, 0.5611124712063237], \"blue_goal\": [0.3789312015998874, 0.18310126792670361, 0.44094177722173994], \"green_goal\": [0.380097513445835, 0.17939041399825584, 0.4809121595519586], \"yellow_goal\": [0.3867083381396941, 0.17699051002455368, 0.5208572287871096]}"
    },
    {
        "instruction": "Stack the yellow, square and triangle blocks on top of the circle block in order.",
        "code": "```python\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4465119080168657, 0.010093751880113511, 0.24125699711185938], \"gripper_state\": \"open\", \"red_goal\": [0.4017540633892726, 0.17882692469188652, 0.5206626913021793], \"blue_goal\": [0.37893222939914023, 0.18297798782255445, 0.4409418045150554], \"green_goal\": [0.41201303425001856, 0.18426043113671503, 0.560555913247932], \"yellow_goal\": [0.38791070329348515, 0.18153337701890904, 0.4808221216329919]}"
    },
    {
        "instruction": "Please put the hexagon block on the red block first, then put the circle block on the hexagon block, and finally to put the green block on the circle block.",
        "code": "```python\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45497852318351256, 0.008930828344013268, 0.2397614434452166], \"gripper_state\": \"open\", \"red_goal\": [0.537204883556402, 0.22523558038087638, 0.44094178145276225], \"blue_goal\": [0.5523112075349793, 0.2323857951847192, 0.5208127422240421], \"green_goal\": [0.5629294342642583, 0.23717766029867707, 0.5607726874368009], \"yellow_goal\": [0.542766862894797, 0.22653338919243554, 0.4808784481314646]}"
    },
    {
        "instruction": "Place the blue block on the square block, then place the triangle block on the blue block, and finally to stack the hexagon block on top.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4539256847842284, 0.007590128269772606, 0.23926485498647393], \"gripper_state\": \"open\", \"red_goal\": [0.537300853270258, 0.22537081181698337, 0.44094179774809766], \"blue_goal\": [0.5441670842917937, 0.22893029067110054, 0.4808694796063055], \"green_goal\": [0.5530384793337096, 0.2322075261170927, 0.5207730937948691], \"yellow_goal\": [0.5579098583504697, 0.23178623423498057, 0.5607333322975349]}"
    },
    {
        "instruction": "Stack the triangle, butter colored and circle blocks on top of the square block in order.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4551855758468292, 0.009922833615153647, 0.2402311148729957], \"gripper_state\": \"open\", \"red_goal\": [0.5372719741983731, 0.22535334613849078, 0.44094177225424935], \"blue_goal\": [0.5528582727501733, 0.22516110791983557, 0.5615403455806915], \"green_goal\": [0.5400162728959034, 0.22525451765896445, 0.48091142416338134], \"yellow_goal\": [0.5405222759021031, 0.22483823532962877, 0.520896618340759]}"
    },
    {
        "instruction": "Please put the hexagon block on the triangle block first, then put the red block on the hexagon block, and finally to put the circle block on the red block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4578766446651454, -0.007194866847244658, 0.239136167017915], \"gripper_state\": \"open\", \"red_goal\": [0.661968450242101, -0.18139236540106654, 0.5208274458133145], \"blue_goal\": [0.6761991399736224, -0.18889964195305023, 0.561172582916626], \"green_goal\": [0.6493411756977264, -0.1720058403754092, 0.4409417844266359], \"yellow_goal\": [0.6498279991202542, -0.17179372836006854, 0.4809190581939214]}"
    },
    {
        "instruction": "Place the blood colored block on the triangle block, then place the hexagon block on the blood colored block, and finally to stack the circle block on top.",
        "code": "```python\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45715074842229136, -0.006910616070975748, 0.23899027746561446], \"gripper_state\": \"open\", \"red_goal\": [0.6573189019760797, -0.17990254682390258, 0.48083347668393167], \"blue_goal\": [0.671765966568532, -0.19191238170871866, 0.5611062340105799], \"green_goal\": [0.6491794288039444, -0.17176576351503958, 0.44094179013118145], \"yellow_goal\": [0.6586800876106612, -0.18332860581067284, 0.520794884961986]}"
    },
    {
        "instruction": "Stack the appled colored, hexagon and square blocks on top of the triangle block in order.",
        "code": "```python\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4564933079833904, -0.006433045059396571, 0.2388698205327638], \"gripper_state\": \"open\", \"red_goal\": [0.6713938274344449, -0.18877976446502384, 0.5611456128924681], \"blue_goal\": [0.6576176176244726, -0.17896828023527145, 0.4808997046901098], \"green_goal\": [0.6490718485728187, -0.17158201325668732, 0.44094178600507], \"yellow_goal\": [0.6576523287478033, -0.17956735852352662, 0.5208843858906761]}"
    },
    {
        "instruction": "Please put the triangle block on the yellow block first, then put the red block on the triangle block, and finally to put the circle block on the red block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4560986354581388, -0.005437589889319236, 0.2384770645523862], \"gripper_state\": \"open\", \"red_goal\": [0.7284321988572225, -0.22695683516107212, 0.5205641298761102], \"blue_goal\": [0.7454331850230846, -0.21720319957841572, 0.5608076658473075], \"green_goal\": [0.7106029549685918, -0.23911896670943936, 0.48083494032035845], \"yellow_goal\": [0.7041066727999512, -0.2396319482266351, 0.44094181915867237]}"
    },
    {
        "instruction": "Place the red block on the hexagon block, then place the triangle block on the red block, and finally to stack the blue block on top.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45660834839297043, -0.005709015570944841, 0.23850269852737832], \"gripper_state\": \"open\", \"red_goal\": [0.7167976514868886, -0.2303409053355501, 0.4807684065120521], \"blue_goal\": [0.7435055624140953, -0.2192080582521465, 0.5608664854551991], \"green_goal\": [0.7250311216340835, -0.2279315143281808, 0.5206265111160788], \"yellow_goal\": [0.704101898638365, -0.23974533068039589, 0.4409418284042488]}"
    },
    {
        "instruction": "Stack the blue, green and square blocks on top of the yellow block in order.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45662181963842174, -0.005616461815453222, 0.23850837835251598], \"gripper_state\": \"open\", \"red_goal\": [0.7477619777616781, -0.21227725614524376, 0.560457313100879], \"blue_goal\": [0.7203291431656862, -0.2262953450657769, 0.4807084816586814], \"green_goal\": [0.7291432947891581, -0.22108016932745583, 0.5203265562042867], \"yellow_goal\": [0.7040988934218263, -0.23975847937901423, 0.440941826854291]}"
    },
    {
        "instruction": "Place the blue block in the black cup.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4479902218475771, -0.01510735065299225, 0.2405485663744304], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45696620921956915, -0.0965355591884139, 0.44145604436947966], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blood colored block and place it on the black mug.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473911090043061, -0.013597761772209598, 0.23986061092085026], \"gripper_state\": \"open\", \"red_goal\": [0.4520656589091759, -0.09686027566498318, 0.44098542662586493], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the environment-protected colored block and place it on the black mug.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473973806459677, -0.014196522688154172, 0.23997910144964757], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4421959372477968, -0.09614438217563534, 0.4409852633130375], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Please put the ocrean colored block on the black cup first, and then put the square block on the ocrean colored block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4508014059557709, -0.013197871476443215, 0.23700398804184125], \"gripper_state\": \"open\", \"red_goal\": [0.46593553234876905, -0.09297520441809076, 0.4809360793458645], \"blue_goal\": [0.45722366828205524, -0.09650921932529946, 0.4409708599349679], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the red block and place it on the black mug first, then stack the triangle block on top of the red block.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4503773344023712, -0.015237777658361946, 0.2370253068337363], \"gripper_state\": \"open\", \"red_goal\": [0.45194948539587726, -0.0968716772126787, 0.440970862275089], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4531460703517144, -0.09400291454612193, 0.48096075108822783], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Grab the green block and place it on the black mug first, then put the circle block on top of the green block.",
        "code": "```python\npri.grab('triangle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45134300963729346, -0.0173064415101037, 0.23846926317247025], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.45761615688004176, -0.09510600734906188, 0.4812426473218345], \"green_goal\": [0.4421773638860784, -0.09615410151437241, 0.44097086793287005], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Position the green block 5cm in front of the four-equal-sides block, then put the six-corners block into the dark colored mug, and finally stack the smooth-contour block on top of the four-corners block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0.05, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4544229517645723, 0.008682753216723911, 0.2369257346856884], \"gripper_state\": \"open\", \"red_goal\": [0.5373529688526462, 0.2253792522025925, 0.4409708669973905], \"blue_goal\": [0.5442859606866157, 0.22766578635077603, 0.48141151446579133], \"green_goal\": [0.5920946678326918, 0.229075175511658, 0.44098542724196665], \"yellow_goal\": [0.4384996735153983, -0.09805652935955009, 0.44098542724196665]}"
    },
    {
        "instruction": "Move the red block 5cm behind the no-corner block, then place the yellow block into the cream colored mug, and finally stack the four-equal-sides block on top of the six-corners block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([-0.05, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574127307195409, -0.004511707763324718, 0.23721221994919034], \"gripper_state\": \"open\", \"red_goal\": [0.7831659864273465, -0.15534903828546082, 0.48142506846621597], \"blue_goal\": [0.38948021861647164, 0.18610681699017906, 0.44098542724205625], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.768421684539995, -0.14457755882159667, 0.4409708658311653]}"
    },
    {
        "instruction": "Position the blood colored block 10cm behind the most corners block, then put the three-line-enclosed block into the milk colored mug, and finally stack the constant-radius shape block on top of the three-corners block.",
        "code": "```python\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568810280298454, -0.004410352019125672, 0.23720149346000158], \"gripper_state\": \"open\", \"red_goal\": [0.6152833758796108, -0.23257431701524334, 0.44098542724196665], \"blue_goal\": [0.7798263513766018, -0.15844036092643005, 0.4814939530203291], \"green_goal\": [0.7682010488409363, -0.14827080847052163, 0.4409708660027051], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Place the yellow block 15cm to the left of the three-corners block, then put the red block into the night colored mug, and finally stack the constant-radius shape block on top of the four-equal-sides block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0.15, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4525631229006222, -0.01285212853706252, 0.23874038487323918], \"gripper_state\": \"open\", \"red_goal\": [0.45378853886947407, -0.09125386641278606, 0.44097087405050667], \"blue_goal\": [0.46858684429290853, -0.08595025671620767, 0.4812094301092815], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.6499768868718201, -0.026191561564676374, 0.44098542724196665]}"
    },
    {
        "instruction": "Move the blue block 10cm behind the yellow block, then place the four-corners block into the dark colored mug, and finally stack the three-corners block on top of the no-corner block.",
        "code": "```python\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45465984774078666, -0.007485086940518125, 0.2373067282594648], \"gripper_state\": \"open\", \"red_goal\": [0.4539036871812422, -0.09595099183743448, 0.44098542724196665], \"blue_goal\": [0.6177622584084329, -0.23002311750247612, 0.44097086147622744], \"green_goal\": [0.6224867519665548, -0.2315232220542965, 0.4809542474665716], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Position the six-corners block 10cm behind the green block, then put the 90°-per-corner block into the cream colored mug, and finally stack the blue block on top of the three-corners block.",
        "code": "```python\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([-0.1, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45491559911341367, -0.005815582870481178, 0.23708265125001987], \"gripper_state\": \"open\", \"red_goal\": [0.7801134635328808, -0.1574916349960036, 0.4409854272419667], \"blue_goal\": [0.6594168899374474, -0.18186920952452215, 0.48117575849148875], \"green_goal\": [0.6493582354010957, -0.17207098485467426, 0.4409708660451461], \"yellow_goal\": [0.5478406482263702, -0.1733493015041936, 0.44098542724196665]}"
    },
    {
        "instruction": "Place the sky colored block 25cm to the right of the  four-corners block, then put the six-corners block into the milk cup, and finally stack the four-equal-sides block on top of the butter colored block.",
        "code": "```python\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, -0.25, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4568478166445209, -0.004398319108727695, 0.2372316530795176], \"gripper_state\": \"open\", \"red_goal\": [0.7811811530882322, -0.153604303227823, 0.48129184783752854], \"blue_goal\": [0.5498681116704097, -0.01830451087033747, 0.44098542724196665], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7684838958447557, -0.14459058839969022, 0.4409708660501213]}"
    },
    {
        "instruction": "Move the green block 8cm in front of the constant-radius shape block, then place the four-equal-sides block into the night colored mug, and finally stack the six-corners block on top of the apple colored block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0.08, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4501958294258189, -0.013670642523788917, 0.23714666843393556], \"gripper_state\": \"open\", \"red_goal\": [0.45188369824564006, -0.09658755024444061, 0.4409708671605415], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4592949793546266, 0.17878201036241992, 0.44098542724196665], \"yellow_goal\": [0.4492821494451232, -0.09470835378643591, 0.48104396111705233]}"
    },
    {
        "instruction": "Position the green block 15cm behind the yellow block, then put the 90°-per-corner block into the cream colored mug, and finally stack the 720°-interior angle block on top of the smooth-contour block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.15, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44724832490477495, 0.014118190739009984, 0.2383682364148208], \"gripper_state\": \"open\", \"red_goal\": [0.7812668777899618, -0.15639542073824844, 0.4409854272419667], \"blue_goal\": [0.3789149637973661, 0.1829905587321063, 0.44097086473881375], \"green_goal\": [0.5549899021601798, -0.2391519879061734, 0.44098542724196665], \"yellow_goal\": [0.3879310472109132, 0.18127495426529408, 0.48104233843433725]}"
    },
    {
        "instruction": "Place the 360°-interior angle block 20cm to the right of the no-corner block, then put the yellow block into the dark colored mug, and finally stack the blue block on top of the six-corners block.",
        "code": "```python\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.2, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.451203978744574, -0.013823778484450235, 0.2386972586671247], \"gripper_state\": \"open\", \"red_goal\": [0.388226507947242, -0.014201894178297461, 0.4409854272419661], \"blue_goal\": [0.4550846621330873, -0.08993567118408449, 0.4812914714615118], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.44242957138486605, -0.09699788259451292, 0.44097087244311983]}"
    },
    {
        "instruction": "Put the 720°-interior angle block into the cream colored mug, then put the blood colored block into the night colored mug, and finally stack the 180°-interior angle block onto the four-equal-sides block.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45043459949980713, -0.014687365242502262, 0.23702047473262894], \"gripper_state\": \"open\", \"red_goal\": [0.452481746361996, -0.09418797335584393, 0.4409708619022098], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4536756716961335, -0.09170037005699318, 0.4809621951613414], \"yellow_goal\": [0.768452055196776, -0.1443818878399032, 0.44098542724196665]}"
    },
    {
        "instruction": "Put the three-corners block into the milk colored mug, then put the constant-radius shape block into the night colored mug, then stack the yellow block onto the constant-radius shape block, and finally stack the red block onto the three-line-enclosed block.",
        "code": "```python\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\":[0.45632592047809345,-0.004335687984486601,0.23721858230440335],\"gripper_state\":\"open\",\"red_goal\":[0.7799352817162585,-0.155036976510611,0.4810310244059187],\"blue_goal\":[0.4559889615577288,-0.09569119811000965,0.44097086015812054],\"green_goal\":[0.7691832685367092,-0.14636169647646838,0.44097086610206576],\"yellow_goal\":[0.4565269030015592,-0.09383902341715324,0.48096313344238206]}"
    },
    {
        "instruction": "Put the ocean colored block into the night colored mug, then stack the red block onto the no-corner block, then put the three-line-enclosed block into the milk colored mug, and finally stack the 720°-interior angle block onto the green block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45633480351310335, -0.004264044077598728, 0.23746998719696405], \"gripper_state\": \"open\", \"red_goal\": [0.4659426377016968, -0.0929742502934342, 0.48093587898260637], \"blue_goal\": [0.45722242053170686, -0.09651104769025677, 0.4409708602352164], \"green_goal\": [0.7690316905316618, -0.1474238796948938, 0.4409708612185838], \"yellow_goal\": [0.7706020359112147, -0.1497584265104371, 0.4809508223578768]}"
    },
    {
        "instruction": "Place the constant-radius shape, leaf colored, and four-equal-sides block into the milk colored mug in order, and then place the butter colored block into the night colored mug.",
        "code": "```python\npri.grab('circle_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4473885154108059, -0.012847337873570114, 0.23970307457987122], \"gripper_state\": \"open\", \"red_goal\": [0.7980784939620162, -0.17071621408801962, 0.5208063352267512], \"blue_goal\": [0.7791149902352486, -0.15578201838889763, 0.44095631160186716], \"green_goal\": [0.7839692810812927, -0.15915729819247515, 0.48090148104564473], \"yellow_goal\": [0.44237403769688444, -0.09640180562675436, 0.44102528962928883]}"
    },
    {
        "instruction": "Place the most corners, grass colored, and smooth-contour block into the milk colored mug in order, and then place the four-equal-sides block into the night colored mug.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.44733153392316366, -0.013465010255945545, 0.23981358429523864], \"gripper_state\": \"open\", \"red_goal\": [0.452362502338917, -0.09467016789914709, 0.4409854250741986], \"blue_goal\": [0.7879560940779837, -0.15999331453790386, 0.5207770071828444], \"green_goal\": [0.7747409225530487, -0.14812157124879424, 0.4809037501905159], \"yellow_goal\": [0.7685458436923285, -0.14435904377855624, 0.44095631253268797]}"
    },
    {
        "instruction": "Please place the yellow, three-corners, blood colored, and constant-radius shape block into the milk colored mug in order.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4573081581371782, -0.004549067849447662, 0.23813629280716214], \"gripper_state\": \"open\", \"red_goal\": [0.788576234226527, -0.16044652118454986, 0.5206480289297941], \"blue_goal\": [0.8035559391536219, -0.16895882109759044, 0.5610496689742769], \"green_goal\": [0.7748316267925716, -0.14819635175879523, 0.4808644892478449], \"yellow_goal\": [0.7685553920440187, -0.1443693892629996, 0.4409418022540296]}"
    },
    {
        "instruction": "Please place the sky colored, 90°-per-corner, 720°-interior angle, and green block into the night colored mug in order, and finally to move the gripper 10cm over the six-corners block.",
        "code": "```python\npri.grab('circle_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46572108424331904, -0.08763213062236165, 0.3108067474256226], \"gripper_state\": \"open\", \"red_goal\": [0.46602907797426923, -0.09290469660950107, 0.48083860365761627], \"blue_goal\": [0.45723484571973155, -0.09649900466203419, 0.4409417728246295], \"green_goal\": [0.4721442665562445, -0.08476134235202654, 0.560762681454389], \"yellow_goal\": [0.4658416240878653, -0.08783443288171212, 0.5207964294332131]}"
    },
    {
        "instruction": "Place the three-line-enclosed block 15cm to the right of the sky colored block, then put the 360°-interior angle block into the cream colored mug, and finally stack the six-corners block on top of the appled colored block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, -0.15, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4567307244461042, -0.004434697357399424, 0.2374255039403645], \"gripper_state\": \"open\", \"red_goal\": [0.7780838953760535, -0.15471867149474236, 0.44097086082929027], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.3806473709914283, 0.035272991786064314, 0.44098542724196665], \"yellow_goal\": [0.7791049259530545, -0.1575077000168044, 0.48096246436376594]}"
    },
    {
        "instruction": "Place the green block 10cm to the left of the no-corner block, then put the 360°-interior angle block into the night cup, and finally stack the yellow block on top of the four-corners block.",
        "code": "```python\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0.1, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4501471682074329, -0.014317578377097219, 0.23710608383582993], \"gripper_state\": \"open\", \"red_goal\": [0.45108064230203304, -0.09586496497638583, 0.4409708680348661], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.3832525692265185, 0.2815203183764661, 0.4409878530163192], \"yellow_goal\": [0.4477557531651573, -0.09391734488834631, 0.48108333533955994]}"
    },
    {
        "instruction": "Place the red block on the black mug, then place the hexagon block on the red block, then place the circle block on the hexagon block, then to place the triangle block on the circle block, and finally to move the gripper 10cm over the circle block.",
        "code": "```python\npri.grab('square_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.15])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')```",
        "goal_pos": "{\"gripper_pos\": [0.46653176408679453, -0.08422712779457979, 0.31037304364386603], \"gripper_state\": \"open\", \"red_goal\": [0.4535899084019871, -0.09480234998263594, 0.440941782185444], \"blue_goal\": [0.4674597264117418, -0.08465053386502072, 0.52080709952594], \"green_goal\": [0.47048774276119537, -0.0810598426452472, 0.5607643777457973], \"yellow_goal\": [0.45402879348829345, -0.09281544021867072, 0.4809151313664442]}"
    },
    {
        "instruction": "First to put the lenmon colored block on the white mug, then stack the square, triangle and blue blocks on top of the hexagon block in order.",
        "code": "```python\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\ntarget_pos = triangle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, triangle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45683124679129583, -0.0043853884640540275, 0.23804870213483925], \"gripper_state\": \"open\", \"red_goal\": [0.7821914822123035, -0.15452687393097386, 0.4807833077412484], \"blue_goal\": [0.8071031870693554, -0.16971916335109416, 0.5610046735324346], \"green_goal\": [0.7921192541883234, -0.1593711219253185, 0.5205725219773757], \"yellow_goal\": [0.7687890872594466, -0.14476130709661325, 0.4409418273681911]}"
    },
    {
        "instruction": "Place the blood colored block on the white mug, then place the hexagon block on the square block, then place the circle block on the hexagon block, and finally to place the green block on the circle block.",
        "code": "```python\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4574699277030688, -0.004600896716447368, 0.2381604393573033], \"gripper_state\": \"open\", \"red_goal\": [0.777072818472296, -0.15326507191077088, 0.44094178869362316], \"blue_goal\": [0.791647484781448, -0.16546284706523698, 0.5208166261377857], \"green_goal\": [0.8028841482226026, -0.1687056985161293, 0.5610884940165209], \"yellow_goal\": [0.7791338180451995, -0.15649209412904047, 0.48090930056119513]}"
    },
    {
        "instruction": "Pick up the four-corners block then put it on the middle of the sky colored block and triangle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nmid_pos = (circle_pos+triangle_pos)/2\nmid_pos[2] += 0.1\npri.grab('square_block')\npri.move(mid_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4562530752892785, -0.000143030040500441, 0.2364731839715452], \"gripper_state\": \"open\", \"red_goal\": [0.5184417533261423, 0.008486087470904234, 0.4409854273686998], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the blue block then put it on the middle of the rose colored block and triangle block",
        "code": "```python\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nmid_pos = (square_pos+triangle_pos)/2\nmid_pos[2] += 0.1\npri.grab('circle_block')\npri.move(mid_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4607189112885174, 0.0007723039053339602, 0.23727202776626627], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.6002421565151886, 0.030804864450397568, 0.44137854305186125], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Pick up the block which is the cloest to the triangle block and then put it on the middle of the blue block and triangle block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(triangle_pos-circle_pos),'square_block':np.linalg.norm(triangle_pos-square_pos),'hexagon_block':np.linalg.norm(triangle_pos-hexagon_pos)}\ncloest_obj = min(distances,key=distances.get)\nmid_pos = (circle_pos+triangle_pos)/2\nmid_pos[2] += 0.1\npri.grab(cloest_obj)\npri.move(mid_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4578453688986985, 0.000127572973538978, 0.2363329866137291], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.6493292420985183, -0.17199067977878174, 0.4409854272419662], \"yellow_goal\": [0.5096372564296325, 0.008400924693331806, 0.44110401486698625]}"
    },
    {
        "instruction": "pick up the block which is the second farthest to the red block and then put it on the middle of the circle block and butter colored block",
        "code": "```python\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntriangle_pos, triangle_quat = pri.get_obj_pose('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ndistances={'circle_block':np.linalg.norm(square_pos-circle_pos),'triangle_block':np.linalg.norm(square_pos-triangle_pos),'hexagon_block':np.linalg.norm(square_pos-hexagon_pos)}\nsorted_distances = sorted(distances.items(), key=lambda item:item[1])\nsecond_farthest_obj = sorted_distances[-2][0]\nmid_pos = (circle_pos+hexagon_pos)/2\nmid_pos[2] += 0.1\npri.grab(second_farthest_obj)\npri.move(mid_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4586729242430148, -0.004567241836038183, 0.23663396724446123], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.5416812544509958, -0.026785295196390425, 0.4409854142749502], \"yellow_goal\": [0.7040362888980227, -0.23970775285209878, 0.4409854272419662]}"
    },
    {
        "instruction": "Move the three-corners block 10cm in front of the rose colored block, then place the most corners block into the milk cup, and finally stack the grass colored block on top of the smooth-contour block.",
        "code": "```python\npri.grab('triangle_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0.1, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('triangle_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.4475091379570461, 0.014010303035281535, 0.23853990785614837], \"gripper_state\": \"open\", \"red_goal\": [0.5372700594236812, 0.22535715320495808, 0.4409854272419662], \"blue_goal\": [0.37901434656400745, 0.18297861340512822, 0.44097086336638697], \"green_goal\": [0.38541298993084816, 0.18555879118695945, 0.4809534806663929], \"yellow_goal\": [0.7676781715447687, -0.1435465755323747, 0.44098542724196665]}"
    },
    {
        "instruction": "Position the green block 25cm behind the 720°-interior angle block, then put the 90°-per-corner block into the milk colored mug, and finally stack the yellow block on top of the 360°-interior angle block.",
        "code": "```python\npri.grab('triangle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([-0.25, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('square_block')\nwhite_pos, white_quat = pri.get_obj_pose('white_mug')\ntarget_pos = white_pos + np.array([0, 0, 0.15])\npri.move(target_pos, white_quat)\npri.gripper_ctrl('open')\npri.grab('hexagon_block')\nsquare_pos, square_quat = pri.get_obj_pose('square_block')\ntarget_pos = square_pos + np.array([0, 0, 0.1])\npri.move(target_pos, square_quat)\npri.gripper_ctrl('open')\npri.reset_robot()```",
        "goal_pos": "{\"gripper_pos\": [0.45671646422428797, -0.004403151676945147, 0.23721104893549522], \"gripper_state\": \"open\", \"red_goal\": [0.777999508800131, -0.15372781732363894, 0.4409708604220036], \"blue_goal\": [0.3790418060840997, 0.1830880728874676, 0.4409854272419662], \"green_goal\": [0.4518348070424973, -0.23528549696356155, 0.44098552786682366], \"yellow_goal\": [0.7812864935167493, -0.15733353323739144, 0.4809499813282102]}"
    },
    {
        "instruction": "I’m facing you,  Stack the most-cornered, no-corner, and blood-colored blocks in order 25cm in front of the night-colored mug, then move 20cm to my right.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.25, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.2, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\": [0.7055452618082488,0.09111830353593119,0.27214587047764244], \"gripper_state\": \"open\", \"red_goal\": [0.7153042123242097,-0.09308692972448271,0.5210616849020016], \"blue_goal\": [0.7018814039988912,-0.09385689088074088,0.48088273816587435], \"green_goal\": [0.6493292420985183,-0.17199067977878174,0.4409854272419662], \"yellow_goal\": [0.6915036176917402,-0.09944740621740437,0.44095632200615703]}"
    },
    {
        "instruction": "I’m facing you, Please stack the most corners, no-corner, blood-colored block in order on the night-colored mug, then move 15cm to my left.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.15, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\":[0.4567521753119169,-0.22969700132915388,0.27245852427048006],\"gripper_state\":\"open\",\"red_goal\":[0.4669983053474783,-0.08765736225332478,0.5208327390136115],\"blue_goal\":[0.4532061051205636,-0.0911537191893143,0.48087584072572104],\"green_goal\":[0.6493292420985183,-0.17199067977878174,0.4409854272419662],\"yellow_goal\":[0.44038617760291593,-0.09653755856485301,0.4409563083334447]}"
    },
    {
        "instruction": "Please stack the most corners, no-corner, blood-colored block in order on the night-colored mug 25cm ahead, then move 20cm to your right.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0.25, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, -0.2, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\":[0.7060990622381392,-0.2844803670045517,0.2728075493589634],\"gripper_state\":\"open\",\"red_goal\":[0.7153168279079843,-0.09308907604305956,0.5210460932046872],\"blue_goal\":[0.7018810594870287,-0.09385728897469825,0.48088275162751587],\"green_goal\":[0.6493292420985183,-0.17199067977878174,0.4409854272419662],\"yellow_goal\":[0.6915033354433067,-0.09944750243849407,0.4409563160281538]}"
    },
    {
        "instruction": "Please stack the most corners, no-corner, blood-colored block in order on the night-colored mug, then move 15cm to your left.",
        "code": "```python\npri.grab('hexagon_block')\nblack_pos, black_quat = pri.get_obj_pose('black_mug')\ntarget_pos = black_pos + np.array([0, 0, 0.1])\npri.move(target_pos, black_quat)\npri.gripper_ctrl('open')\npri.grab('circle_block')\nhexagon_pos, hexagon_quat = pri.get_obj_pose('hexagon_block')\ntarget_pos = hexagon_pos + np.array([0, 0, 0.1])\npri.move(target_pos, hexagon_quat)\npri.gripper_ctrl('open')\npri.grab('red_block')\ncircle_pos, circle_quat = pri.get_obj_pose('circle_block')\ntarget_pos = circle_pos + np.array([0, 0, 0.1])\npri.move(target_pos, circle_quat)\npri.gripper_ctrl('open')\ncurrent_pos, current_quat = pri.get_current_pose()\ntarget_pos = current_pos + np.array([0, 0.15, 0])\npri.move(target_pos, current_quat)```",
        "goal_pos": "{\"gripper_pos\":[0.4569105929453465,0.04491700320749724,0.27166820338572034],\"gripper_state\":\"open\",\"red_goal\":[0.46699480000138416,-0.08765813360940022,0.5208344680750466],\"blue_goal\":[0.45320364314094186,-0.09115432868648493,0.4808764284068287],\"green_goal\":[0.6493292420985183,-0.17199067977878174,0.4409854272419662],\"yellow_goal\":[0.4403857436399582,-0.09653765550194045,0.4409563078487023]}"
    }
]